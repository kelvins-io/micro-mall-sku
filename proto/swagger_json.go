package proto

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _proto_micro_mall_sku_proto_sku_business_sku_swagger_json = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x58\x4f\x6f\x1b\x45\x14\xbf\xfb\x53\x8c\x06\x8e\x55\x1c\x02\xe2\x90\x9b\x71\x2c\x1a\xb5\x34\x96\xd7\x16\x20\x14\xad\x26\xbb\xcf\xce\xd4\xbb\x33\x93\xf9\x93\xc8\x20\x4b\x70\x28\x42\x48\xc0\x21\x2a\xe5\x54\xa9\x07\x04\x17\x10\x5c\x00\xe5\xf3\xe0\xa8\x7c\x0b\x34\xeb\xb5\xbd\xff\x63\x6f\x92\x96\xd2\x9c\x36\x6f\xe6\xbd\x79\xbf\x37\xbf\xf7\xc7\xf3\x59\x03\x21\xac\xce\xc8\x68\x04\x12\xef\x22\xbc\xb3\xb5\x8d\xef\x58\x19\x65\x43\x8e\x77\x91\x5d\x47\x08\x6b\xaa\x03\xb0\xeb\x42\x72\xcd\x9b\x21\xf5\x24\x77\x43\x12\x04\xae\x1a\x1b\x77\x2e\xb4\x5f\x47\x46\x51\x06\x4a\xd9\x7f\xb6\x22\x71\x64\x0d\x21\x7c\x0a\x52\x51\xce\xac\x8d\xf8\x13\x31\xae\x91\x02\x8d\x1b\x08\x4d\xa3\x33\x3d\xce\x94\x09\x41\xe1\x5d\xf4\xc9\x5c\x8b\x08\x11\x50\x8f\x68\xca\x59\xf3\xa1\xe2\xcc\xee\x3d\x8c\xf6\x0a\xc9\x7d\xe3\xad\xb9\x97\xe8\x63\xb5\x02\xd3\x3c\x7d\xcb\xfa\xd7\x0c\xa8\xd2\x4b\x29\x42\x78\x04\xc9\x7f\x6d\x5c\x4c\x18\x12\x39\xb1\x3e\x3f\xff\xf6\xcf\xd9\x77\xdf\xcf\x2e\x9e\xfc\x73\x7e\xa1\xc6\x66\xf6\xd5\x93\xe7\xcf\x7e\x8e\xb1\x45\x7b\xb9\x00\x19\x9d\xbd\xef\xdb\xfd\xef\x83\x76\xc6\xe6\xbe\x3d\x21\xb1\x49\x82\x12\x9c\x29\x50\xa9\x73\x10\xc2\x3b\xdb\xdb\x19\x11\x42\xd8\x07\xe5\x49\x2a\x74\x1c\xb6\x16\x52\xc6\xf3\x40\xa9\xa1\x09\xd0\xc2\xd2\x56\xc2\xfc\xdc\x67\xef\x18\x42\x92\x33\x86\x10\x7e\x53\xc2\xd0\xda\x79\xa3\xe9\xc3\x90\x32\x6a\xed\xaa\xd4\xad\xad\x9c\xee\xc5\xe6\x71\xca\xc8\xb4\x51\xf4\x3d\x4d\x00\x14\x44\x92\x10\x34\xc8\xd5\xbd\xcc\xff\x32\xd0\x18\x09\x23\x3a\xa9\x63\x2e\x5c\xea\x67\x41\xd0\x08\xf0\x89\x01\x39\xc9\x2e\x49\x38\x31\x54\x82\x0d\xf2\x90\x04\x0a\x32\xcb\x7a\x22\xe6\x86\xb5\xa4\x6c\x94\x55\x1e\x72\x19\x12\x7b\xc9\x98\x32\xfd\xee\x3b\xb8\x10\xcf\x61\x02\x8f\x26\xa3\x2c\x12\xec\x8c\xcd\x7b\x71\xc0\x1c\x90\xa7\xd4\x4b\x44\xe9\xb0\x91\xb4\x16\x47\x66\x49\x38\x21\x2d\x4b\xf4\xa4\xa9\x8c\x10\x01\x84\xc0\x52\xfc\x13\xa6\x82\x7f\xcf\x7e\x9c\x3d\x7a\x64\x99\xf7\xf8\xcb\xd9\xf9\x17\xb3\xdf\x9f\x5e\x7e\xfe\x53\x05\xff\x9c\xe5\x09\xce\xd8\x74\xe3\x73\x5f\x21\x2a\x16\xfa\xff\xa2\x58\x79\xc4\xfd\x1c\xef\xe6\x94\x2c\x5a\x49\x30\x52\x4b\x93\x25\xe4\x2d\x04\xe1\xc4\x80\xd2\xeb\xc4\xe0\x16\x99\x6c\xb4\x4b\xce\xc8\x24\x45\x5f\xae\xca\xf9\xfb\xf7\x5f\x5f\x5f\x3e\xfd\x63\x4e\xde\x0a\xda\x76\x8d\x6e\x9d\x91\x89\x33\x36\xaf\x10\x57\x57\x4e\xbf\x6e\x04\x4d\x22\x7f\x19\xac\x5c\x4e\x0e\x09\x07\x57\x7d\x3e\xe9\x69\x9b\x87\x21\x67\xcb\xfb\x49\xd0\x76\xd1\x31\xf8\xd1\x43\xf0\x56\xdd\x1a\xc7\xc5\x9a\x66\x58\x87\x3d\xee\x43\x96\x87\x57\x47\xaa\x07\xba\x6d\x15\x0b\xaf\x3f\x54\xa3\xac\xc5\x4c\x1f\x6b\x64\xc3\x98\x4e\xcb\x2b\x9a\xf8\x35\xd0\x66\x66\xa4\x94\x0d\x22\x25\x49\x93\x0d\x53\x0d\x61\x36\x4b\xd7\x2b\x75\x63\xb3\xcf\x4e\x81\x69\x2e\x27\xfb\x76\xf4\x2c\xce\x99\x2b\xd1\x1f\x2c\xea\x49\x7f\xee\x64\x0e\x78\x66\x30\xc0\xc0\x4c\x98\x62\x20\x6e\xf7\x3a\xad\x7e\x27\x59\x7f\x06\xdd\xbd\x8c\x64\xaf\x73\xbf\x93\x96\xb4\x06\x7b\xfb\xfd\xa4\xa0\x3b\xe8\xbb\xad\x0f\x5b\x1f\x2f\x90\x2c\x69\x6f\xc9\x4a\x4c\x10\x8d\x21\xf1\x59\xa5\x70\xf2\x09\x76\x8d\xbb\xe4\xc2\x35\xd4\xbf\x82\x69\xa9\xeb\x2c\x9d\x97\xa6\xa9\x12\xee\x52\xb1\x36\x7f\x13\x8a\x6a\x6c\x36\x4f\xa4\x72\xa2\x4c\x8b\xda\x8a\xab\xd3\x3c\x58\xf3\x94\x34\x8d\x36\xe0\x5f\x41\x2f\xb8\x56\xad\xb1\x55\x6b\x73\xf7\x33\xd5\x6e\x03\xff\x17\x75\xaa\x56\xe6\x38\x83\x76\xbb\xe3\x38\xc9\x2c\xe8\xf4\x7a\x07\xbd\x54\x2e\x39\x9d\x9e\xfb\xe0\xa0\xef\x76\x3e\xda\x77\xfa\xb9\x95\x9c\xf4\x83\x4e\xaf\x7d\xb7\xf5\xa0\x5f\xac\xb3\x5c\xcd\xad\x38\x77\x0f\xba\xc5\x3a\xd1\x4a\x5e\x7a\x6f\x50\xb2\xfd\xde\x20\x16\x56\x25\xf2\x02\x7a\x69\x60\x73\xbc\xbd\x06\x2d\xac\xdd\xa2\x36\xb4\x4e\xd2\xc5\x23\xc4\xc6\x7a\x42\xda\x46\x5c\x43\x71\xf1\x74\xb0\x79\x79\x30\x47\x6e\x6d\x65\x3b\x04\xd6\x83\xc9\x7d\xe3\xc5\xb3\x63\x0d\x97\x85\x08\x68\xf4\x92\xb2\xb1\xae\x47\x34\x8c\xb8\x9c\x94\xe9\x52\xa6\x61\x04\xb2\xa2\x40\xbf\xbd\x53\x62\x99\x07\xbc\x9e\x4b\x56\xb1\x92\x69\xf5\x9d\x52\x02\x3c\x3a\x8c\xdf\x6b\xea\xde\xb0\x1b\x50\x36\xae\x75\x51\x9a\xe8\x5b\x00\x45\x42\x6e\x58\xe9\xbc\x54\xbb\xc3\x2e\x5e\x49\x6e\xc4\x6e\x23\x63\x7f\xf5\xb6\x17\x3f\x2d\x5c\x9c\xcf\x7e\xf9\xe1\xf2\xf1\x6f\x97\xdf\xfc\x5a\x51\xce\xaa\x7e\x9a\xfe\x9f\x66\x94\x9b\x0c\xfd\x9d\x9b\x29\xe1\x8a\x7e\x5a\x4f\xef\x98\xe4\x67\xa1\xcd\x8a\xa2\xeb\x59\x82\x97\x17\xa9\x35\xad\xf8\x15\xd9\x57\x8d\x00\x82\xa1\x1b\xd0\xe1\x0b\x6d\x7d\x2f\x6d\x98\xac\x7e\x04\xfb\xef\xce\x95\xf6\x67\x79\x63\xda\xf8\x37\x00\x00\xff\xff\xaa\xdb\x72\x65\x5c\x18\x00\x00")

func proto_micro_mall_sku_proto_sku_business_sku_swagger_json() ([]byte, error) {
	return bindata_read(
		_proto_micro_mall_sku_proto_sku_business_sku_swagger_json,
		"proto/micro_mall_sku_proto/sku_business/sku.swagger.json",
	)
}

var _proto_micro_mall_users_proto_users_users_swagger_json = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x58\x4f\x6f\x23\x35\x14\xbf\xe7\x53\x58\x86\x63\xd5\x94\x82\x38\xf4\x16\xa5\x11\x54\xa2\x5b\x94\xa4\x12\x12\xaa\x46\xee\xcc\x4b\xe2\xd5\x8c\x3d\xb5\xdf\x94\x46\xa8\x87\x95\x00\xed\x09\x0e\x5b\x16\x21\xd0\x8a\xbd\x71\x82\x03\x42\x45\xcb\x61\xbf\x0c\xc9\x96\x6f\x81\x3c\x7f\x92\x99\xc9\x24\x9d\xfc\xeb\x26\xa2\x52\xab\xd4\xf6\x7b\x7e\xbf\x9f\x7f\x7e\xcf\x2f\x5f\x56\x08\xa1\xfa\x0b\xd6\xed\x82\xa2\x07\x84\xee\xef\xee\xd1\x1d\x33\xc6\x45\x47\xd2\x03\x62\xe6\x09\xa1\xc8\xd1\x05\x33\xef\x2b\x89\xb2\xea\x71\x5b\x49\xcb\x63\xae\x6b\x05\x1a\x94\xb6\xa2\xe1\xf0\x73\xf4\x77\x37\x1c\x09\x5d\x11\x42\x2f\x41\x69\x2e\x85\x71\x10\x7f\x24\x42\x22\xd1\x80\xb4\x42\xc8\x75\xb8\xa1\x2d\x85\x0e\x3c\xd0\xf4\x80\x7c\x1e\x59\x31\xdf\x77\xb9\xcd\x90\x4b\x51\x7d\xac\xa5\x30\x6b\xcf\xc2\xb5\xbe\x92\x4e\x60\x97\x5c\xcb\xb0\xa7\xc7\x48\xaa\x97\xef\x85\x11\x56\x33\x00\x09\xa1\x5d\xc0\xd4\xbf\x86\x95\xc0\xf3\x98\xea\x9b\xa0\xef\xbe\xbd\x1d\x7c\xf7\xfc\xcd\xcd\xaf\xc3\xa7\xb7\xff\xbc\x7e\x39\x7c\xf2\x7b\x8c\x2c\x5c\x28\x7d\x50\xe1\xce\x47\x8e\x59\xfc\x11\xe0\xa9\x06\x75\x64\xfc\xa7\x56\x29\xd0\xbe\x14\x1a\x74\x66\x17\x42\xe8\xfe\xde\x5e\x6e\x88\x10\xea\x80\xb6\x15\xf7\x31\x66\xad\x46\x74\x60\xdb\xa0\x75\x27\x70\x49\xe2\x69\x37\xe5\x3e\x8a\xd8\xee\x81\xc7\x26\x9c\x11\x42\xdf\x55\xd0\x31\x7e\xde\xa9\x3a\xd0\xe1\x82\x1b\xbf\xf1\x49\xa5\xc2\x6d\xc6\x8e\x69\xc6\xfc\xba\x52\xf4\xf9\x3a\x05\xcd\x67\x8a\x79\x80\xa0\xc6\x07\x12\xfd\xe4\x40\x09\xe6\x85\x22\x0a\xb8\x93\x0f\x9d\x87\x30\x2f\x02\x50\xfd\xfc\x94\x82\x8b\x80\x2b\x30\xdc\x76\x98\xab\x21\x37\x8d\x7d\x3f\x74\xaa\x51\x71\xd1\xcd\x1b\x77\xa4\xf2\x98\x39\x58\xca\x05\x7e\xf8\x01\x2d\xc4\x72\x96\xc2\x82\xac\x9b\x47\x41\x0d\x3f\xba\x05\xea\x92\xdb\x29\x6e\xce\x2a\x69\x3f\x31\x1f\x63\x7d\x79\xa0\xec\x1e\x13\xa8\xab\x4c\x6b\x69\x73\x86\x50\xd5\x3d\xe9\xa7\x35\xe7\x07\xd3\x35\x37\xf8\xfe\x9b\xe1\xd3\xdb\xc1\xd7\x7f\xdc\x3d\xb9\x19\xbc\xfa\xe1\xdf\x67\xaf\x66\x68\xee\x38\xd9\xac\x96\xec\xd5\x32\x5b\x6d\x81\xfc\x8a\x23\x7f\x28\x25\x9e\x4b\x67\x42\x6f\x91\x14\x8b\x66\x52\x4a\x44\x15\xe4\x85\xb8\x52\xf8\x17\x01\x68\x2c\x83\xfe\x3e\xed\x8e\x36\x58\x42\xbf\x81\xc3\xb1\xb4\x6c\x7f\x7b\x39\xfc\xe5\xaf\x48\xbc\x3b\x77\xaf\x6f\x06\x3f\xbd\x88\x86\xde\xfc\xfd\x6c\xf8\xe2\xe7\x32\x1a\x3e\x66\x08\x8a\x33\xb7\x16\xee\xbb\x4d\x1a\xce\x44\xfe\xff\xd3\x70\x0e\xfe\x26\x69\xd8\x8b\x43\x9b\xaf\xe2\x47\x32\xbe\xfb\xf3\xab\xe1\xf3\x1f\x67\x57\xfc\x09\x0e\xb6\x41\xb7\x45\x71\x3f\x94\x6a\x93\x03\xb1\xb6\xec\x2d\x50\x42\x8b\x3b\xa3\x3c\x29\xf5\x8a\xde\x94\x5b\x29\xaf\xb7\xa6\xad\xcd\xcb\x88\x6f\x23\x19\x8e\x3a\xab\x54\x78\xe3\x3e\x28\x8c\xb3\x2e\x3d\x4f\x8a\xd1\xb1\xa4\x72\x63\x72\x93\xe4\xf9\x63\xb0\xc7\x45\xd8\x74\x5e\x3e\x28\xe4\x39\xb1\x51\x5b\x3a\x90\x97\xdf\x0c\x82\x9a\x80\x75\x63\x51\x78\xdc\x9e\xee\xe6\x5d\xe5\x2e\x76\x25\x4f\x5b\x36\xff\xdf\x9f\xdc\x96\x42\x6a\x38\x9b\x03\x6b\x8e\xe4\x42\xc8\xb9\x66\x74\x6e\x7d\x85\xcd\x66\x49\x56\x26\xba\xbd\x2d\x27\x63\xd4\x6c\x97\xc1\x3f\xfb\xbd\xbd\x04\x13\xe9\x7a\x36\x5b\xbc\xe9\x04\x33\xbd\x26\xa5\x09\x31\x6d\xe3\x3a\xfc\x72\x6d\x8d\x7a\xd3\x69\xce\xcf\xa5\x74\x81\x89\x69\xde\x93\xe9\x65\xb8\xdf\x24\x19\x96\x88\xbe\xf0\x95\xbb\xa1\xca\x09\x5b\x37\x2b\x58\x83\x67\x43\x39\x08\x5c\x41\xa2\xbe\xa7\x7b\xda\x08\x59\xa4\x2f\x23\xce\xb8\x2d\x5c\x20\x74\x41\xcd\xe0\xf3\xfd\xfd\xd5\xf0\x99\x32\x15\x70\x85\xd6\xfa\x4e\x9a\x6b\x4b\x5e\x86\xdf\x0e\x3f\x58\x82\xc8\x94\xb5\x25\x04\xb0\x0e\x3a\xd6\x79\x5d\x15\x74\xb9\x46\x50\x16\x73\x9c\xa9\x84\xcf\x92\x42\x0f\x98\x8b\x3d\xcb\x66\xca\xb1\xc4\x44\x11\x2d\xe3\x81\x3b\x20\x90\x63\x7f\xf5\x0a\x5f\xd3\xc5\x41\x76\x35\x37\xde\x39\x24\xb8\x82\x04\xbf\xe2\xc7\x5d\x51\x97\x68\xc5\x31\x95\xdd\xe3\x24\x31\x6c\x1b\xbb\x05\x89\xd9\xd0\x04\xbd\xf2\x0b\x3a\x9d\x94\x2c\x8d\x05\x44\xe4\x36\xa2\x20\x02\x2f\xd3\xd0\xd1\x7a\xb3\x51\x6b\x37\xd2\xed\xfc\xe9\xa7\x87\xb9\x91\xc3\xc6\x27\x8d\xec\x48\xed\xf4\xf0\xa8\x9d\x84\x38\xea\x18\x4d\xa7\xc7\x02\x37\x04\x11\xfb\x9d\x8c\x39\x69\xbd\x16\x8a\xb6\x75\x5a\xaf\x37\x5a\xad\x74\x28\x8d\x66\xf3\xa4\x99\x89\xbf\xd5\x68\x5a\x8f\x4e\xda\x56\xe3\xb3\xa3\x56\x7b\x62\x66\x62\xf4\xb8\xd1\xac\x7f\x5c\x7b\xd4\x2e\xb6\x19\xcd\x46\x33\xb3\x20\x27\xc1\x4d\x62\x1e\xb5\x08\x1b\x56\x4b\x98\x6d\xcb\x40\xe0\xfd\x4a\x2d\xb4\x36\xd0\xac\xf8\x3b\x8f\xb9\x8d\x35\x5c\xad\xe3\x11\x13\x08\x54\x7d\xab\xe8\xdb\x80\x32\x41\xf9\x3d\x29\x16\x32\x04\x8f\x71\x77\x21\x1a\xd6\x53\x94\xb8\xb3\x54\x0d\x16\x97\x1c\xa7\xbf\xb8\x16\x7f\xc9\x45\x7e\x17\x3e\x1e\x5b\x0a\x64\x36\x2e\xfc\x3a\x61\xdd\x75\x3c\x9c\x15\x30\x04\x0b\xf9\x62\xf7\x20\xf0\x9d\xb9\xcd\xb3\x05\xa1\x62\x7e\xaf\x2b\xff\x05\x00\x00\xff\xff\x60\x10\x61\xa2\x4a\x21\x00\x00")

func proto_micro_mall_users_proto_users_users_swagger_json() ([]byte, error) {
	return bindata_read(
		_proto_micro_mall_users_proto_users_users_swagger_json,
		"proto/micro_mall_users_proto/users/users.swagger.json",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"proto/micro_mall_sku_proto/sku_business/sku.swagger.json": proto_micro_mall_sku_proto_sku_business_sku_swagger_json,
	"proto/micro_mall_users_proto/users/users.swagger.json": proto_micro_mall_users_proto_users_users_swagger_json,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"proto": &_bintree_t{nil, map[string]*_bintree_t{
		"micro_mall_sku_proto": &_bintree_t{nil, map[string]*_bintree_t{
			"sku_business": &_bintree_t{nil, map[string]*_bintree_t{
				"sku.swagger.json": &_bintree_t{proto_micro_mall_sku_proto_sku_business_sku_swagger_json, map[string]*_bintree_t{
				}},
			}},
		}},
		"micro_mall_users_proto": &_bintree_t{nil, map[string]*_bintree_t{
			"users": &_bintree_t{nil, map[string]*_bintree_t{
				"users.swagger.json": &_bintree_t{proto_micro_mall_users_proto_users_users_swagger_json, map[string]*_bintree_t{
				}},
			}},
		}},
	}},
}}

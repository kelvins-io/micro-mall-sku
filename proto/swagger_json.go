package proto

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _proto_micro_mall_sku_proto_sku_business_sku_swagger_json = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\xdd\x6f\xd3\xdc\x19\xbf\xef\x5f\x61\x79\xbb\xd8\xa4\x57\x84\xb1\x69\x17\xdc\x65\xa9\x79\x89\xde\xb6\x89\xec\x04\x86\x26\x64\x39\xf6\x49\x7a\x88\x7d\x8e\x39\x1f\xed\xb2\xa9\x12\x68\x62\xa3\x08\x06\x12\x03\xf6\x81\xd0\x60\x43\xe3\x62\xdd\x98\x34\x01\x63\x93\xf6\xcf\x34\x69\xf9\x2f\x5e\xd9\x71\x12\xdb\xf1\x49\x62\x3b\x6d\x1d\xa9\x96\x2a\x35\xc7\xe7\x79\xce\xf3\xf5\x3b\xcf\x73\x3e\xfc\xcb\x35\x49\x92\xe9\xae\xd1\xe9\x00\x22\x5f\x96\xe4\x4b\x17\x2e\xca\x5f\x79\x6d\x10\xb5\xb1\x7c\x59\xf2\xde\x4b\x92\xcc\x20\xb3\x81\xf7\xde\x25\x98\xe1\x92\x03\x4d\x82\x75\xc7\xb0\x6d\x9d\x76\xb9\x3e\x6c\xf4\xfe\x6b\x71\x0a\x11\xa0\xd4\xfb\x71\xc1\x6f\xf6\xb9\x49\x92\xbc\x03\x08\x85\x18\x79\x3c\x82\x7f\x25\x84\x99\x44\x01\x93\xd7\x24\x69\xcf\x1f\xd3\xc4\x88\x72\x07\x50\xf9\xb2\xf4\xb3\x21\x95\xe1\xba\x36\x34\x0d\x06\x31\x2a\xdd\xa2\x18\x79\x7d\x6f\xfa\x7d\x5d\x82\x2d\x6e\x2e\xd8\xd7\x60\xdb\x74\xa2\x4c\x69\xe7\x07\x9e\x7c\x25\x88\x76\x00\x62\x98\xf4\x4a\x16\xb0\xb8\xc9\xc6\x3d\x3c\x12\x1e\xfe\xe9\xd9\x88\x3b\x8e\x41\x7a\x9e\xfc\x83\xfd\xbf\xf4\x7f\xf3\xb8\xff\xf9\x69\xff\xe0\xf7\x81\x7a\x7e\x17\xec\x02\xe2\x0f\x5f\xb5\xbc\x6e\x5a\x97\xff\x24\x30\x87\x06\xc8\x0e\x34\x81\xbe\xee\x8f\x53\x1d\x8d\x1b\x26\x26\x80\xba\x18\x51\x40\x23\xc3\x4a\x92\x7c\xe9\xe2\xc5\x58\x93\x24\xc9\x16\xa0\x26\x81\x2e\x0b\x2c\x5a\x96\x28\x37\x4d\x40\x69\x9b\xdb\xd2\x88\xd3\x85\x10\xfb\xa1\x0a\xe6\x36\x70\x8c\x29\x66\x92\x24\x7f\x97\x80\xb6\xc7\xe7\x3b\x25\x0b\xb4\x21\x82\x1e\x5f\x1a\x71\x68\x4c\x72\x35\x18\x43\x8e\x70\xda\x0b\xfd\xda\x0b\x0f\x2e\x5b\xa0\x6d\x70\x9b\xcd\x57\x04\x49\x1c\x81\x9f\xbb\xc0\x64\xc0\x92\x00\x21\x98\x8c\xf5\xc9\xab\x0e\xe1\x88\x41\x07\x28\x1e\xd3\x19\x72\xaf\x25\x68\x20\xbb\x06\x31\x1c\xc0\x00\x99\xc4\xdb\xf0\x89\xa9\x83\x0c\xc7\x87\x49\x0b\x5b\xbd\xb8\xbc\x10\x89\xde\x10\x70\x9b\x43\x02\xbc\xa8\x61\x84\x83\x93\x74\xdb\x6d\x0e\x28\x5b\x44\xfb\x9b\x21\xed\x99\xd1\x89\xeb\x9d\x10\xdd\x13\xae\x37\xd7\xc2\xdc\x02\x3b\x26\xc0\xce\x86\x34\x02\xba\x0e\x10\x83\xee\xf8\xb7\x1f\xfb\x8f\x9f\xf7\x3f\xbf\xf8\xf2\xf4\x33\xed\xf2\xfe\xfd\x17\xc7\xaf\xdf\xa5\x43\xdf\xd7\x80\x69\x5d\xbe\xe1\x0d\xba\x3a\xc0\x9b\x08\x7d\x8e\xb9\xe0\x11\x60\x8e\x6e\x63\x57\x87\x56\x32\xec\x6e\x73\x40\x66\xe1\xae\x6d\xd8\x34\x0e\x3c\xd6\x73\x87\x8c\x19\x81\xa8\x13\x27\x6e\x63\xe2\x18\x9e\x75\x65\x88\xd8\x8f\x7f\x24\x9f\x19\x8a\x5c\xce\x74\x63\xd7\xe8\x45\xd2\x17\xa6\x62\x28\x1d\x7e\x7a\x30\x78\xf5\xa1\xff\xec\xd7\xfd\xa7\x77\xd3\x21\xa8\xce\x59\x79\xd7\xe8\x69\x5d\xbe\x42\x08\x9a\x08\x7d\x8e\xa0\xe0\x29\x78\xd6\x0a\x7b\xac\x50\x09\x8b\x00\xca\x30\x01\x0b\x17\x8a\x77\xdf\xf4\xff\xfa\x28\x4b\xa1\xa8\x0e\x07\x5a\xc5\x4a\x31\x2e\xfa\x39\xe8\x82\xa7\xe0\xa0\x9b\xf6\x5b\xa1\xa0\x47\x81\x41\xcc\xed\x85\x73\xdc\x30\xbb\x0d\x9e\xbc\x3c\xfa\xf7\x9b\x74\xd0\xd3\xfc\x81\xb4\x2e\x5f\x45\xf0\x4d\x0b\x7f\x0e\xbf\xe0\x29\x38\xfc\x92\x3c\x57\x40\x00\x96\x68\x0f\x99\x29\x51\x38\x4c\x80\x43\x2c\xf6\x9f\x3c\x1c\x1c\xbc\x1d\x3c\x7b\x3f\x78\xf4\x8f\xef\x1d\xff\xf3\x63\xff\xe5\xbb\xc3\x4f\x7f\xec\x3f\x78\x7d\xf8\xe9\xd1\xd1\x7f\xee\xf6\xff\xff\x87\xc1\x8b\x0f\xc7\xef\x7f\x75\xf4\xbb\x77\xdf\xcf\x84\xdb\x1e\x32\x57\x1b\xbb\x31\x05\xce\xf1\x1b\x3c\xab\x81\xdf\x29\xef\x15\x00\xc3\x2e\x81\x26\x28\xb5\xa1\xcd\x88\xc1\xc0\xc2\xe0\x1d\x3c\xdc\x3f\x3a\x78\x7e\xf4\xec\xed\xd1\xc1\x9f\xbe\xdc\xd9\x1f\x62\xf9\xf0\xbf\x1f\x07\x7f\xfe\xdf\xd1\xfe\xfd\xc1\xcb\xbf\xa7\xc3\xe7\x95\x60\x7c\xad\xcb\xeb\x9e\x40\xd7\x82\x0d\xe1\xd5\x01\xa8\x40\x83\x73\x84\x06\x4f\xc1\x11\x2a\x74\x5f\x21\x20\xea\x01\x88\xf5\x4a\x94\xbb\xae\x0d\x1c\x80\x16\x3e\x8d\x38\x7e\xfd\xb6\x7f\xef\x1e\xed\xf2\x20\xd9\xfe\xeb\xd5\xe0\xce\xdf\x52\xa6\xce\xf1\xa0\xbe\x6d\x86\xa2\xac\x10\x30\x13\xe5\x3f\x87\x65\xf0\x14\x1c\x96\x02\xe7\x9d\x05\x28\xc7\x07\x91\x21\x59\x27\xc7\x86\xfe\x71\x66\x8b\xb7\xcb\x28\xb2\xd5\x3a\xda\x25\xc6\xad\x5b\xc0\x9c\x9c\x2c\xc8\x01\xa4\x61\x0c\x34\x7e\x7f\x9d\x13\x3b\x0e\xa5\xd8\x6e\x73\xa2\x8f\x77\x0c\x9b\x83\x39\x84\x91\xa0\x9e\x6c\x52\xb7\x7a\x2c\xa4\xf8\x5e\xe2\x6c\x14\x09\xbf\x1c\x2a\x82\x18\x83\x85\xf5\x33\xb1\x25\x54\x0f\x22\x06\x3a\x80\x88\xf4\x83\x88\xfd\xf0\x52\x32\x57\x07\x50\x6a\x74\xe6\xd9\x2d\x91\xd4\x02\xcc\x80\xf6\xd4\xb4\x37\x22\x35\x08\x31\xa2\x50\x91\x21\x03\x4e\xbc\xbf\x10\x07\xe1\x90\x4a\x06\x78\xa2\x9f\xc2\xf0\xa9\x60\xc7\x09\xd5\x20\x39\xbc\x96\x64\xfc\x45\xb6\x8d\x58\xc5\x23\x4c\xb6\x3c\xed\x2c\x6c\xf5\xb9\x9a\x0a\xce\x32\x73\x68\x1c\x3b\x7f\x5c\xaa\x6b\xc3\x92\x8f\x65\x56\x10\x23\x3d\x6d\x1b\xbb\x02\x6f\x27\x65\x6d\xdd\x01\x2c\x3e\xb5\x2e\x30\x66\x6d\x44\xbf\xe9\x91\xe7\x31\xf3\x32\x22\xcb\x8b\xd1\xf4\x3a\xc4\x62\x3b\xd1\x4e\x90\xea\x41\x79\x21\xf2\x64\x0b\x63\x1b\x18\x48\x38\x31\x06\xaf\x53\x98\x68\x4e\x25\x99\xc3\x52\x14\x30\xfd\xb4\xa2\x32\x26\xbd\x06\xd8\xfc\xa8\x74\xb1\x0d\xcd\x9e\x1e\x88\x93\xd2\x9d\xa3\x01\xeb\x3e\x93\x91\x11\x1b\x1e\xaf\xc4\xc1\x6c\xe8\x40\xa6\x73\xd7\x05\xc2\x64\x32\x3f\x29\x84\x4f\x66\x73\x78\xb6\xd8\x20\x20\x80\x4e\x97\xae\x27\x12\x34\x62\x03\x79\x02\x64\xcc\x61\xb3\x99\xe6\x81\x53\x70\x25\x20\x53\xc5\x14\x0f\x9e\x90\xbd\x3d\xe1\x67\xd5\x2a\x8b\x5b\x5c\x94\x0e\xd3\x19\x30\xe1\x92\xc8\x0a\xa4\xc5\xf0\x46\x59\x15\xb5\x71\x56\xed\xa3\xe9\x75\xdd\x2f\xd9\x72\x45\xcd\x1c\xef\xce\x2a\x18\x0d\x07\x73\x24\xb4\x5e\xba\x80\x4b\xa9\xb8\x5f\x57\x14\x10\x2c\x98\x33\x9d\x11\xc3\x02\x3a\xc2\xd9\x6b\xf0\xd3\xaf\xd3\x82\x40\xca\x18\x94\xd1\xfa\x2b\x87\x5b\xb0\xab\xf3\x93\xf0\x8a\xab\x43\x77\x79\xc5\xf9\x58\xdd\x46\xb4\x34\x10\x09\x2a\x03\xc4\x9d\xc8\x52\x5d\xae\xa8\x4a\xb9\xa1\x84\xb7\x9d\x9a\xf5\xf5\x58\xcb\xba\xb2\xa1\x44\x5b\xca\xcd\xf5\x6a\x23\xdc\x50\x6f\x36\xf4\xf2\xf5\xf2\x8d\x91\xf4\xe3\xfd\x81\xd0\x0e\xcf\x68\x2c\xa1\x3a\xd3\x37\x50\xf2\xcd\x27\x99\x8a\x25\xc1\xe4\x98\xbc\x4a\xc8\x56\x92\x45\xdd\x36\x67\x88\x53\x5e\x88\x24\xdc\xdb\x2a\x52\xf9\x35\x57\x7e\xd1\x85\x8a\x15\xc8\xcc\x2b\xb5\x60\x15\x5e\x38\x2a\x52\xb4\x9c\xf1\x8a\x75\xb4\x4b\x93\x69\x62\xd6\x9a\x95\x8a\xa2\x69\xe1\x49\x56\x51\xd5\x9a\x1a\x99\xaa\x35\x45\xd5\xb7\x6a\x0d\x5d\xf9\x69\x55\x6b\x4c\xbd\x99\x6a\xdd\x54\xd4\xca\xd5\xf2\x56\x23\x99\x66\xfc\x76\xea\x8d\x76\xb5\x56\x4f\xa6\xf1\xdf\x4c\xb7\x7e\xd3\x14\x74\xff\xa6\x99\xdc\x58\xde\xac\x35\x47\x72\x6d\xd5\x9a\x5f\x5f\x0d\x77\x68\xa8\xe5\x2d\xad\x5c\x69\x54\x6b\x5b\xfa\x95\x72\x75\x43\x59\x8f\x93\xd7\xd5\x6a\x45\xd1\xaf\x29\xaa\xe6\xf5\x11\x0e\x1d\xed\x56\xaf\x6d\x54\x2b\x37\xf4\xc6\x8d\xba\xe2\x93\x68\xcd\x7a\xbd\xa6\x2e\x46\xb4\x5e\x6e\x94\xf5\x2b\x35\x75\xb3\xdc\xd0\x15\x55\x9d\x99\xf6\x46\x9e\x14\xc6\xc9\xf4\x2d\x14\x7f\x06\xc8\x03\xa5\xc8\x87\x44\x41\xdb\xb2\xd2\x1f\x35\xa3\xb7\x31\x23\x02\x22\xee\xb4\xc4\x5b\x03\x16\xe6\x2d\x3b\xd5\x7c\x2e\xbe\xa1\x93\xc3\x3a\x5d\xd0\xdb\xc5\x64\x5e\x79\x97\x53\xca\x62\xcf\x87\xa7\xb6\xdc\x14\xc4\x76\xc6\x02\x7f\xf6\x85\x8f\x02\xae\xc3\x5c\xa3\x03\x74\x0a\x7f\x91\xf1\x00\x69\x1e\xe7\x61\xda\x38\x8d\x65\xef\x9c\x8b\x52\x05\x0d\xf3\xa4\x79\xb0\xc8\xbb\x2a\x53\x7c\xce\x68\x47\x25\x38\xaf\x4e\x4d\xe7\xdf\x7a\xca\x42\x38\xfa\xd6\x35\x35\x21\xe5\x2d\x3d\x33\xb1\x05\xa8\x99\x4d\x4d\x6c\x71\x33\xb8\x9c\x90\x41\x64\xd7\xb5\xa1\x78\x7f\x7d\xe6\x61\xad\xc1\x40\x07\x47\x8a\x83\x08\x6d\xf6\x03\x5b\x13\xdb\x59\xcf\x8f\x6d\x4c\x66\x46\x5a\x76\xa1\xa8\x0b\x4c\xd8\x0e\x3e\x30\xce\xea\x61\xdd\x86\xa8\x9b\xc9\x51\x2c\x7a\x75\x6f\x49\x4a\x4d\xbe\xca\x5e\x6e\x46\x58\xe6\x36\xe8\x57\x27\x94\x1a\xd7\x62\xfc\x27\x1f\xb9\x47\xae\x2d\xfb\x57\x95\x67\x54\xcc\xe2\x43\xad\x4c\x8b\xad\x51\x75\xaf\x29\xfe\x2a\x23\xbc\x04\x18\xbd\x6a\xd6\xeb\x8a\x9a\xf4\x62\xa3\x76\x5d\x99\xbd\x00\x88\x73\x9f\xab\x56\x70\x14\x93\x7b\x15\x90\x27\x03\x64\x9e\xc9\x97\x1a\xdd\x8b\x24\xcc\xf8\x79\x6a\x01\xab\x40\xe0\x79\xf2\xac\xce\x98\xf3\x15\xdc\xb3\x2e\x8a\x15\xd0\xd2\x79\x42\x7e\x81\x32\x5d\x30\x41\x1a\xd3\xdb\xc0\xe9\xca\x08\xdd\xf4\xa6\x6e\x71\x5a\x5f\x90\x8b\x35\x23\x5f\xcd\xd6\x00\xd8\x6d\xdd\x86\xed\x53\x2d\x16\xf3\x9e\x51\x9d\xd4\xe6\xe7\x29\x6c\xf5\x67\xc5\x5d\x01\x57\x5b\x51\x55\xd6\xbc\xbf\xbd\xb5\x6f\x03\x00\x00\xff\xff\x13\xaa\x49\x57\xe2\x46\x00\x00")

func proto_micro_mall_sku_proto_sku_business_sku_swagger_json() ([]byte, error) {
	return bindata_read(
		_proto_micro_mall_sku_proto_sku_business_sku_swagger_json,
		"proto/micro_mall_sku_proto/sku_business/sku.swagger.json",
	)
}

var _proto_micro_mall_users_proto_users_users_swagger_json = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x58\x4f\x6f\x23\x35\x14\xbf\xe7\x53\x58\x86\x63\xd5\x94\x82\x38\xf4\x16\xa5\x11\x54\xa2\x5b\x94\xa4\x12\x12\xaa\x46\xee\xcc\x4b\xe2\xd5\x8c\x3d\xb5\xdf\x94\x46\xa8\x87\x95\x00\xed\x09\x0e\x5b\x16\x21\xd0\x8a\xbd\x71\x82\x03\x42\x45\xcb\x61\xbf\x0c\xc9\x96\x6f\x81\x3c\x7f\x92\x99\xc9\x24\x9d\xfc\xeb\x26\xa2\x52\xab\xd4\xf6\x7b\x7e\xbf\x9f\x7f\x7e\xcf\x2f\x5f\x56\x08\xa1\xfa\x0b\xd6\xed\x82\xa2\x07\x84\xee\xef\xee\xd1\x1d\x33\xc6\x45\x47\xd2\x03\x62\xe6\x09\xa1\xc8\xd1\x05\x33\xef\x2b\x89\xb2\xea\x71\x5b\x49\xcb\x63\xae\x6b\x05\x1a\x94\xb6\xa2\xe1\xf0\x73\xf4\x77\x37\x1c\x09\x5d\x11\x42\x2f\x41\x69\x2e\x85\x71\x10\x7f\x24\x42\x22\xd1\x80\xb4\x42\xc8\x75\xb8\xa1\x2d\x85\x0e\x3c\xd0\xf4\x80\x7c\x1e\x59\x31\xdf\x77\xb9\xcd\x90\x4b\x51\x7d\xac\xa5\x30\x6b\xcf\xc2\xb5\xbe\x92\x4e\x60\x97\x5c\xcb\xb0\xa7\xc7\x48\xaa\x97\xef\x85\x11\x56\x33\x00\x09\xa1\x5d\xc0\xd4\xbf\x86\x95\xc0\xf3\x98\xea\x9b\xa0\xef\xbe\xbd\x1d\x7c\xf7\xfc\xcd\xcd\xaf\xc3\xa7\xb7\xff\xbc\x7e\x39\x7c\xf2\x7b\x8c\x2c\x5c\x28\x7d\x50\xe1\xce\x47\x8e\x59\xfc\x11\xe0\xa9\x06\x75\x64\xfc\xa7\x56\x29\xd0\xbe\x14\x1a\x74\x66\x17\x42\xe8\xfe\xde\x5e\x6e\x88\x10\xea\x80\xb6\x15\xf7\x31\x66\xad\x46\x74\x60\xdb\xa0\x75\x27\x70\x49\xe2\x69\x37\xe5\x3e\x8a\xd8\xee\x81\xc7\x26\x9c\x11\x42\xdf\x55\xd0\x31\x7e\xde\xa9\x3a\xd0\xe1\x82\x1b\xbf\xf1\x49\xa5\xc2\x6d\xc6\x8e\x69\xc6\xfc\xba\x52\xf4\xf9\x3a\x05\xcd\x67\x8a\x79\x80\xa0\xc6\x07\x12\xfd\xe4\x40\x09\xe6\x85\x22\x0a\xb8\x93\x0f\x9d\x87\x30\x2f\x02\x50\xfd\xfc\x94\x82\x8b\x80\x2b\x30\xdc\x76\x98\xab\x21\x37\x8d\x7d\x3f\x74\xaa\x51\x71\xd1\xcd\x1b\x77\xa4\xf2\x98\x39\x58\xca\x05\x7e\xf8\x01\x2d\xc4\x72\x96\xc2\x82\xac\x9b\x47\x41\x0d\x3f\xba\x05\xea\x92\xdb\x29\x6e\xce\x2a\x69\x3f\x31\x1f\x63\x7d\x79\xa0\xec\x1e\x13\xa8\xab\x4c\x6b\x69\x73\x86\x50\xd5\x3d\xe9\xa7\x35\xe7\x07\xd3\x35\x37\xf8\xfe\x9b\xe1\xd3\xdb\xc1\xd7\x7f\xdc\x3d\xb9\x19\xbc\xfa\xe1\xdf\x67\xaf\x66\x68\xee\x38\xd9\xac\x96\xec\xd5\x32\x5b\x6d\x81\xfc\x8a\x23\x7f\x28\x25\x9e\x4b\x67\x42\x6f\x91\x14\x8b\x66\x52\x4a\x44\x15\xe4\x85\xb8\x52\xf8\x17\x01\x68\x2c\x83\xfe\x3e\xed\x8e\x36\x58\x42\xbf\x81\xc3\xb1\xb4\x6c\x7f\x7b\x39\xfc\xe5\xaf\x48\xbc\x3b\x77\xaf\x6f\x06\x3f\xbd\x88\x86\xde\xfc\xfd\x6c\xf8\xe2\xe7\x32\x1a\x3e\x66\x08\x8a\x33\xb7\x16\xee\xbb\x4d\x1a\xce\x44\xfe\xff\xd3\x70\x0e\xfe\x26\x69\xd8\x8b\x43\x9b\xaf\xe2\x47\x32\xbe\xfb\xf3\xab\xe1\xf3\x1f\x67\x57\xfc\x09\x0e\xb6\x41\xb7\x45\x71\x3f\x94\x6a\x93\x03\xb1\xb6\xec\x2d\x50\x42\x8b\x3b\xa3\x3c\x29\xf5\x8a\xde\x94\x5b\x29\xaf\xb7\xa6\xad\xcd\xcb\x88\x6f\x23\x19\x8e\x3a\xab\x54\x78\xe3\x3e\x28\x8c\xb3\x2e\x3d\x4f\x8a\xd1\xb1\xa4\x72\x63\x72\x93\xe4\xf9\x63\xb0\xc7\x45\xd8\x74\x5e\x3e\x28\xe4\x39\xb1\x51\x5b\x3a\x90\x97\xdf\x0c\x82\x9a\x80\x75\x63\x51\x78\xdc\x9e\xee\xe6\x5d\xe5\x2e\x76\x25\x4f\x5b\x36\xff\xdf\x9f\xdc\x96\x42\x6a\x38\x9b\x03\x6b\x8e\xe4\x42\xc8\xb9\x66\x74\x6e\x7d\x85\xcd\x66\x49\x56\x26\xba\xbd\x2d\x27\x63\xd4\x6c\x97\xc1\x3f\xfb\xbd\xbd\x04\x13\xe9\x7a\x36\x5b\xbc\xe9\x04\x33\xbd\x26\xa5\x09\x31\x6d\xe3\x3a\xfc\x72\x6d\x8d\x7a\xd3\x69\xce\xcf\xa5\x74\x81\x89\x69\xde\x93\xe9\x65\xb8\xdf\x24\x19\x96\x88\xbe\xf0\x95\xbb\xa1\xca\x09\x5b\x37\x2b\x58\x83\x67\x43\x39\x08\x5c\x41\xa2\xbe\xa7\x7b\xda\x08\x59\xa4\x2f\x23\xce\xb8\x2d\x5c\x20\x74\x41\xcd\xe0\xf3\xfd\xfd\xd5\xf0\x99\x32\x15\x70\x85\xd6\xfa\x4e\x9a\x6b\x4b\x5e\x86\xdf\x0e\x3f\x58\x82\xc8\x94\xb5\x25\x04\xb0\x0e\x3a\xd6\x79\x5d\x15\x74\xb9\x46\x50\x16\x73\x9c\xa9\x84\xcf\x92\x42\x0f\x98\x8b\x3d\xcb\x66\xca\xb1\xc4\x44\x11\x2d\xe3\x81\x3b\x20\x90\x63\x7f\xf5\x0a\x5f\xd3\xc5\x41\x76\x35\x37\xde\x39\x24\xb8\x82\x04\xbf\xe2\xc7\x5d\x51\x97\x68\xc5\x31\x95\xdd\xe3\x24\x31\x6c\x1b\xbb\x05\x89\xd9\xd0\x04\xbd\xf2\x0b\x3a\x9d\x94\x2c\x8d\x05\x44\xe4\x36\xa2\x20\x02\x2f\xd3\xd0\xd1\x7a\xb3\x51\x6b\x37\xd2\xed\xfc\xe9\xa7\x87\xb9\x91\xc3\xc6\x27\x8d\xec\x48\xed\xf4\xf0\xa8\x9d\x84\x38\xea\x18\x4d\xa7\xc7\x02\x37\x04\x11\xfb\x9d\x8c\x39\x69\xbd\x16\x8a\xb6\x75\x5a\xaf\x37\x5a\xad\x74\x28\x8d\x66\xf3\xa4\x99\x89\xbf\xd5\x68\x5a\x8f\x4e\xda\x56\xe3\xb3\xa3\x56\x7b\x62\x66\x62\xf4\xb8\xd1\xac\x7f\x5c\x7b\xd4\x2e\xb6\x19\xcd\x46\x33\xb3\x20\x27\xc1\x4d\x62\x1e\xb5\x08\x1b\x56\x4b\x98\x6d\xcb\x40\xe0\xfd\x4a\x2d\xb4\x36\xd0\xac\xf8\x3b\x8f\xb9\x8d\x35\x5c\xad\xe3\x11\x13\x08\x54\x7d\xab\xe8\xdb\x80\x32\x41\xf9\x3d\x29\x16\x32\x04\x8f\x71\x77\x21\x1a\xd6\x53\x94\xb8\xb3\x54\x0d\x16\x97\x1c\xa7\xbf\xb8\x16\x7f\xc9\x45\x7e\x17\x3e\x1e\x5b\x0a\x64\x36\x2e\xfc\x3a\x61\xdd\x75\x3c\x9c\x15\x30\x04\x0b\xf9\x62\xf7\x20\xf0\x9d\xb9\xcd\xb3\x05\xa1\x62\x7e\xaf\x2b\xff\x05\x00\x00\xff\xff\x60\x10\x61\xa2\x4a\x21\x00\x00")

func proto_micro_mall_users_proto_users_users_swagger_json() ([]byte, error) {
	return bindata_read(
		_proto_micro_mall_users_proto_users_users_swagger_json,
		"proto/micro_mall_users_proto/users/users.swagger.json",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"proto/micro_mall_sku_proto/sku_business/sku.swagger.json": proto_micro_mall_sku_proto_sku_business_sku_swagger_json,
	"proto/micro_mall_users_proto/users/users.swagger.json":    proto_micro_mall_users_proto_users_users_swagger_json,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func     func() ([]byte, error)
	Children map[string]*_bintree_t
}

var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"proto": &_bintree_t{nil, map[string]*_bintree_t{
		"micro_mall_sku_proto": &_bintree_t{nil, map[string]*_bintree_t{
			"sku_business": &_bintree_t{nil, map[string]*_bintree_t{
				"sku.swagger.json": &_bintree_t{proto_micro_mall_sku_proto_sku_business_sku_swagger_json, map[string]*_bintree_t{}},
			}},
		}},
		"micro_mall_users_proto": &_bintree_t{nil, map[string]*_bintree_t{
			"users": &_bintree_t{nil, map[string]*_bintree_t{
				"users.swagger.json": &_bintree_t{proto_micro_mall_users_proto_users_users_swagger_json, map[string]*_bintree_t{}},
			}},
		}},
	}},
}}

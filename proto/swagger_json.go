package proto

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _proto_micro_mall_sku_proto_sku_business_sku_swagger_json = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x4f\x8f\xdb\x44\x14\xbf\xef\xa7\xb0\x0c\x47\xd4\x94\x82\x38\xf4\x66\xb2\x6e\x1b\x75\x77\x13\xd9\x49\x4b\x85\x2a\xcb\xb1\x5f\xb2\xd3\xd8\x1e\x77\xfe\x6c\x09\x68\xa5\xf6\x50\xe8\x22\x4a\x0f\x55\x5b\x24\x50\x45\x81\x0a\x0e\x14\xc1\x85\xa2\xc2\xc7\x69\xb2\xed\xb7\x40\xe3\xd8\x89\xed\xd8\xf9\xe3\x64\x77\x13\x69\x2d\x55\x6a\x3c\xf3\xde\xbc\x7f\xbf\x79\x6f\xde\x78\xbf\xd8\x90\x24\x99\xde\x32\xdb\x6d\x20\xf2\x79\x49\x3e\x77\xe6\xac\xfc\x9e\x78\x87\xbc\x16\x96\xcf\x4b\x62\x5c\x92\x64\x86\x98\x03\x62\xdc\x27\x98\xe1\x92\x8b\x2c\x82\x0d\xd7\x74\x1c\x83\x76\xb8\x31\x78\x29\xfe\xd7\xe4\x14\x79\x40\xa9\xf8\x71\x26\x78\x1d\x70\x93\x24\x79\x0f\x08\x45\xd8\x13\x3c\xc2\xff\x4a\x1e\x66\x12\x05\x26\x6f\x48\xd2\x7e\xb0\xa6\x85\x3d\xca\x5d\xa0\xf2\x79\xe9\xd3\x01\x95\xe9\xfb\x0e\xb2\x4c\x86\xb0\x57\xba\x41\xb1\x27\xe6\x5e\x0f\xe6\xfa\x04\xdb\xdc\x9a\x71\xae\xc9\x76\xe9\x48\x99\xd2\xde\xfb\x42\xbe\x12\xf2\xf6\xc0\x63\x98\x74\x4b\x36\xd8\xdc\x62\xc3\x19\x82\x84\xc7\x7f\x0a\x1b\x71\xd7\x35\x49\x57\xc8\xdf\x3f\xf8\xb9\xf7\xd5\x83\xde\xab\x87\xbd\x17\xdf\x85\xea\x05\x53\xb0\x0f\x24\x58\xbe\x62\x8b\x69\x7a\x87\x7f\x1c\x9a\x43\x07\xb2\x87\x2c\x30\x36\x83\x75\x2a\xd1\xba\x71\x62\x02\xd4\xc7\x1e\x05\x9a\x58\x56\x92\xe4\x73\x67\xcf\xa6\x5e\x49\x92\x6c\x03\xb5\x08\xf2\x59\x68\x51\x45\xa2\xdc\xb2\x80\xd2\x16\x77\xa4\x88\xd3\x99\x18\xfb\x81\x0a\xd6\x2e\xb8\xe6\x18\x33\x49\x92\xdf\x25\xd0\x12\x7c\xde\x29\xd9\xd0\x42\x1e\x12\x7c\x69\xc2\xa1\x29\xc9\xb5\x70\x0d\x39\xc1\x69\x3f\xf6\x6b\x3f\xbe\xb8\x6c\x43\xcb\xe4\x0e\x9b\xae\x88\x27\x71\x0f\x3e\xf3\xc1\x62\x60\x4b\x40\x08\x26\x43\x7d\x16\x55\x87\x70\x8f\x21\x17\x54\xc1\x74\x82\xdc\x1b\x19\x1a\xc8\xbe\x49\x4c\x17\x18\x90\x51\xbc\x0d\x9e\x94\x3a\x9e\xe9\x06\x30\x69\x62\xbb\x9b\x96\x17\x79\x79\x23\x04\x6e\x72\x44\x40\x44\x0d\x23\x1c\x8e\xd2\x6d\x37\x39\x50\x36\x8b\xf6\xd7\x63\xda\x33\xb3\x9d\xd6\x3b\x23\xba\x47\x5c\xaf\x6f\xc4\xb9\x85\x76\xcc\x80\x9d\x83\x68\x02\x74\x6d\xc8\x07\xdd\x9b\x6f\x5f\xf6\x1e\x3c\xee\xbd\x7a\xf2\xf6\xe1\x2b\xda\xe1\xbd\x7b\x4f\xde\x3c\xfb\x6d\x3e\xf4\x5d\x04\xa6\x77\xf8\x96\x58\x74\x7d\x80\x37\x12\xfa\x14\x73\xe1\x93\x83\x39\xba\x8b\x7d\x03\xd9\xd9\xb0\xbb\xc9\x81\x4c\xc2\x5d\xcb\x74\x68\x1a\x78\xac\xeb\x0f\x18\x33\x82\xbc\x76\x9a\xb8\x85\x89\x6b\x0a\xeb\xca\xc8\x63\x1f\x7d\x28\x9f\x18\x8a\x7c\xce\x0c\xf3\x96\xd9\x4d\xa4\x2f\x4c\xf3\xa1\xf4\xfa\x9f\xaf\xfb\x4f\xff\xee\x3d\xfa\xb2\xf7\xf0\xce\x7c\x08\xaa\x71\xa6\xdc\x32\xbb\x7a\x87\xaf\x11\x82\x46\x42\x9f\x22\x28\x7c\x56\x3c\x6b\xc5\x3d\xb6\x52\x09\x8b\x00\x65\x98\xc0\xcc\x85\xe2\x9d\x9f\x7a\xbf\xdc\x2f\x52\x28\x6a\x83\x85\xd6\xb1\x52\x4c\x8b\x7e\x0a\xba\xf0\x59\x71\xd0\x8d\xfb\x6d\x05\xa0\xe7\x13\x64\x41\xa9\x85\x1c\x46\x4c\x06\x33\x67\xb8\xfe\x37\x07\x87\x2f\x1e\x1f\x3e\x7a\x7e\xf8\xe2\xfb\xb7\xb7\x0f\x06\xa9\xee\xf5\xbf\x2f\xfb\x3f\xfe\x77\x78\x70\xaf\xff\xc3\xef\xf3\xa1\xf1\x42\xb8\xbe\xde\xe1\x35\x21\xd0\x95\xf0\x2c\xbb\x3e\xa0\xcc\xd1\xe0\x14\x9b\xe1\xb3\xe2\xd8\xcc\x75\xdf\x4a\x40\x54\x00\x88\x75\x4b\x94\xfb\xbe\x03\x2e\x78\x33\x37\x52\xde\x3c\x7b\xde\xbb\x7b\x57\x9c\xe6\x02\x80\xf6\xfe\x7a\xda\xbf\xfd\xeb\x7c\xd0\xd4\x87\x8b\x06\xb6\x19\x88\xb2\x46\xc0\xcc\x94\xff\x14\x96\xe1\xb3\xe2\xb0\xcc\x71\xde\x49\x80\x72\xd8\x43\x8d\xc9\x3a\xea\x78\x06\x9d\xd8\x26\x6f\x29\x5e\xe2\x94\x18\x1d\x70\x71\xf3\x06\x58\xa3\xa6\x88\x1c\x42\x1a\xa5\x40\x13\xcc\x37\x38\x71\xd2\x50\x4a\x1d\x94\x33\x7d\xbc\x67\x3a\x1c\xa6\x10\x26\x82\x7a\x74\xbe\x6e\x76\x59\x4c\xf1\xfd\xcc\xdd\x28\x11\x7e\x0b\xa8\x08\x29\x06\x33\xeb\x67\x61\x3b\x57\x3d\xe4\x31\x68\x03\xc9\xd3\x0f\x79\xec\x83\x73\xd9\x5c\x5d\xa0\xd4\x6c\x4f\xb3\x5b\x26\xa9\x0d\xcc\x44\xce\xd8\xb6\x17\x91\x9a\x84\x98\x49\xa8\xc8\x88\x81\x9b\x9e\x9f\x8b\x83\x78\x48\x65\x03\x3c\xd3\x4f\x71\xf8\x94\xb1\xeb\xc6\x6a\x90\x05\xbc\x96\x65\xfc\x59\x2a\x5e\x56\x16\x84\xd9\x96\xa7\xed\x99\xad\x3e\x55\xd3\x9c\x36\xec\x02\x1a\xa7\x5a\xa7\x4b\x75\x6d\x5c\xf2\xa1\xcc\xaa\xc7\x48\x57\xdf\xc5\x7e\x8e\xb7\xb3\xb2\xb6\xe1\x02\x4b\x6f\xad\x33\xac\x59\x8d\xe8\xb7\x05\xf9\x22\x66\x5e\x46\x64\x89\x18\x9d\x5f\x87\x54\x6c\x67\xda\x09\x51\x23\x2c\x2f\xf2\x3c\xd9\xc4\xd8\x01\xd3\xcb\xdd\x18\xc3\xe1\x39\x4c\x34\xa5\x92\x5c\xc0\x52\x14\x98\x71\x5c\x51\x99\x92\x5e\x07\x36\x3d\x2a\x7d\xec\x20\xab\x6b\x84\xe2\xcc\xe9\xce\x68\xc1\x5a\xc0\x24\x32\x62\x5d\xf0\xca\x5c\xcc\x41\x2e\x62\x06\xf7\x7d\xc8\x4d\x26\xd3\x93\x42\xbc\xa9\xbc\x80\x67\x57\x1b\x04\x04\xe8\x78\xe9\x7a\x24\x41\x93\x6f\x20\x21\x40\xc1\x1c\x36\x99\xe9\x22\x70\x0a\x6f\x33\x0a\x55\x4c\xe9\xe0\x89\xd9\x5b\x08\x3f\xa9\x56\x99\xdd\xe2\x79\xe9\x70\x3e\x03\x66\xdc\x6f\xad\x41\x5a\xd4\x3b\x7c\x98\x66\x2a\x5e\x0b\x17\xd5\x3e\x99\x5e\x37\x83\x92\x6d\xa1\xa8\x99\xe2\xdd\x49\x05\xa3\xe9\x62\xee\xe5\x5a\x6f\xbe\x80\x9b\x53\xf1\xa0\xae\x58\x41\xb0\x60\xce\x0c\x46\x4c\x1b\x0c\x0f\x17\xaf\xc1\x8f\xbf\x4e\x0b\x03\xa9\x60\x50\x26\xeb\xaf\x05\xdc\x82\x7d\x83\x1f\x85\x57\x7c\x03\xf9\xcb\x2b\xce\x87\xea\xd6\x93\xa5\x41\x9e\xa0\x32\x78\xdc\x4d\x1c\xd5\xe5\xb2\xa6\x2a\x75\x35\xde\x76\x6a\xd4\x36\x53\x6f\x36\xd5\x2d\x35\xf9\x46\x69\x6c\x56\xea\xf1\x17\xb5\x46\xdd\x50\xae\x2a\xd7\x22\xe9\x87\xfd\x81\x58\x87\x27\x5a\x2b\x57\x9d\xf1\xcb\xb3\xc5\xf6\x93\x42\xc5\x52\xce\xe6\x98\x7d\x4a\x28\x56\x92\x25\xdd\x36\x65\x89\x63\x3e\x88\x64\x5c\x39\xaf\x52\xf9\x35\x55\xfe\xbc\xbb\xa0\x35\xc8\xcc\x6b\x75\x60\xcd\xbd\x2b\x5d\xa5\x68\x39\xe1\x13\x6b\xd4\xa5\x29\xb4\x31\xeb\x8d\x72\x59\xd5\xf5\xf8\x26\xab\x6a\x5a\x55\x4b\x6c\xd5\xba\xaa\x19\x3b\xd5\xba\xa1\x7e\x52\xd1\xeb\x63\x23\x63\x6f\xb7\x55\xad\x7c\x49\xd9\xa9\x67\xd3\x0c\x47\xc7\x46\xf4\x4b\xd5\x5a\x36\x4d\x30\x32\xfe\xf6\x72\x23\x67\xfa\xe5\x46\xf6\x4b\x65\xbb\xda\x88\xe4\xda\xa9\x36\x2e\x5e\x8a\x4f\xa8\x6b\xca\x8e\xae\x94\xeb\x95\xea\x8e\x71\x41\xa9\x6c\xa9\x9b\x69\xf2\x9a\x56\x29\xab\xc6\x15\x55\xd3\xc5\x9c\xdc\xa5\x93\xd3\x6a\xd5\xad\x4a\xf9\x9a\x51\xbf\x56\x53\x03\x12\xbd\x51\xab\x55\xb5\xd9\x88\x36\x95\xba\x62\x5c\xa8\x6a\xdb\x4a\xdd\x50\x35\x6d\x62\xda\x8b\x3c\x99\x1b\x27\x63\x59\xe7\x84\xca\xe8\xf0\x92\x62\x6e\xba\xe0\xaa\xbb\x08\x61\xf4\x6d\xf6\xdc\x84\x94\x37\x8d\xc2\xc4\x36\x50\xab\x98\x9a\xd8\xe6\x56\x78\x23\x55\x40\x64\xdf\x77\x50\x7e\x53\x65\x62\x87\xde\x64\xd0\xc6\xa4\xbb\xfc\x2e\xbd\x85\x9d\xa2\x97\x06\x0e\x26\x13\x23\xad\xb8\x50\xd4\x07\x0b\xb5\xc2\x0f\xe2\x8b\x7a\xd8\x70\x90\xd7\x29\xe4\x28\x96\xfc\x5e\x63\x49\x4a\x8d\xfe\x8a\x60\xb9\x47\x8a\x65\x9e\x7d\xe3\x56\x58\xe6\xb9\x74\x23\xc5\x7f\xf4\x47\x19\xe1\xf5\x79\xf0\x9d\x59\xff\xd1\x9f\xfd\xfb\x7f\x4c\xdc\x26\xf3\x3a\x99\x85\x32\x6c\xb4\xa5\xeb\x6a\x90\x5a\xe2\xfb\x7e\x34\xd4\xa8\xd5\x54\x2d\x6b\x60\xab\x7a\x55\x9d\xbc\xeb\xa7\xb9\x4f\x55\x2b\xec\xbf\x05\xc5\xdf\x49\x65\x80\xc2\x3b\xf9\x52\xa3\x7b\x6a\x61\x95\xd1\x44\x5f\xc1\x16\x0c\x08\x4f\x9e\xd4\xc5\xc2\x20\x8c\x62\x4c\xe6\x69\xa3\x4c\xfc\x3a\x60\x05\x2d\xbd\x48\xc8\x53\xf4\x79\x31\xba\x5d\x73\xfc\xec\x3f\x5f\x19\x61\x58\x62\xeb\xce\x4f\xeb\x33\x72\xb1\x27\xe4\xab\xc9\x1a\x80\xd3\x32\x1c\xd4\x3a\xd6\x62\x71\xd1\xc6\xe4\x51\x9d\x78\x8f\xa1\xbf\x53\x14\x77\x2b\x78\xb2\x4e\xaa\xb2\x21\xfe\xed\x6f\xfc\x1f\x00\x00\xff\xff\xa0\x1e\x90\x9a\x92\x39\x00\x00")

func proto_micro_mall_sku_proto_sku_business_sku_swagger_json() ([]byte, error) {
	return bindata_read(
		_proto_micro_mall_sku_proto_sku_business_sku_swagger_json,
		"proto/micro_mall_sku_proto/sku_business/sku.swagger.json",
	)
}

var _proto_micro_mall_users_proto_users_users_swagger_json = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x58\x4f\x6f\x23\x35\x14\xbf\xe7\x53\x58\x86\x63\xd5\x94\x82\x38\xf4\x16\xa5\x11\x54\xa2\x5b\x94\xa4\x12\x12\xaa\x46\xee\xcc\x4b\xe2\xd5\x8c\x3d\xb5\xdf\x94\x46\xa8\x87\x95\x00\xed\x09\x0e\x5b\x16\x21\xd0\x8a\xbd\x71\x82\x03\x42\x45\xcb\x61\xbf\x0c\xc9\x96\x6f\x81\x3c\x7f\x92\x99\xc9\x24\x9d\xfc\xeb\x26\xa2\x52\xab\xd4\xf6\x7b\x7e\xbf\x9f\x7f\x7e\xcf\x2f\x5f\x56\x08\xa1\xfa\x0b\xd6\xed\x82\xa2\x07\x84\xee\xef\xee\xd1\x1d\x33\xc6\x45\x47\xd2\x03\x62\xe6\x09\xa1\xc8\xd1\x05\x33\xef\x2b\x89\xb2\xea\x71\x5b\x49\xcb\x63\xae\x6b\x05\x1a\x94\xb6\xa2\xe1\xf0\x73\xf4\x77\x37\x1c\x09\x5d\x11\x42\x2f\x41\x69\x2e\x85\x71\x10\x7f\x24\x42\x22\xd1\x80\xb4\x42\xc8\x75\xb8\xa1\x2d\x85\x0e\x3c\xd0\xf4\x80\x7c\x1e\x59\x31\xdf\x77\xb9\xcd\x90\x4b\x51\x7d\xac\xa5\x30\x6b\xcf\xc2\xb5\xbe\x92\x4e\x60\x97\x5c\xcb\xb0\xa7\xc7\x48\xaa\x97\xef\x85\x11\x56\x33\x00\x09\xa1\x5d\xc0\xd4\xbf\x86\x95\xc0\xf3\x98\xea\x9b\xa0\xef\xbe\xbd\x1d\x7c\xf7\xfc\xcd\xcd\xaf\xc3\xa7\xb7\xff\xbc\x7e\x39\x7c\xf2\x7b\x8c\x2c\x5c\x28\x7d\x50\xe1\xce\x47\x8e\x59\xfc\x11\xe0\xa9\x06\x75\x64\xfc\xa7\x56\x29\xd0\xbe\x14\x1a\x74\x66\x17\x42\xe8\xfe\xde\x5e\x6e\x88\x10\xea\x80\xb6\x15\xf7\x31\x66\xad\x46\x74\x60\xdb\xa0\x75\x27\x70\x49\xe2\x69\x37\xe5\x3e\x8a\xd8\xee\x81\xc7\x26\x9c\x11\x42\xdf\x55\xd0\x31\x7e\xde\xa9\x3a\xd0\xe1\x82\x1b\xbf\xf1\x49\xa5\xc2\x6d\xc6\x8e\x69\xc6\xfc\xba\x52\xf4\xf9\x3a\x05\xcd\x67\x8a\x79\x80\xa0\xc6\x07\x12\xfd\xe4\x40\x09\xe6\x85\x22\x0a\xb8\x93\x0f\x9d\x87\x30\x2f\x02\x50\xfd\xfc\x94\x82\x8b\x80\x2b\x30\xdc\x76\x98\xab\x21\x37\x8d\x7d\x3f\x74\xaa\x51\x71\xd1\xcd\x1b\x77\xa4\xf2\x98\x39\x58\xca\x05\x7e\xf8\x01\x2d\xc4\x72\x96\xc2\x82\xac\x9b\x47\x41\x0d\x3f\xba\x05\xea\x92\xdb\x29\x6e\xce\x2a\x69\x3f\x31\x1f\x63\x7d\x79\xa0\xec\x1e\x13\xa8\xab\x4c\x6b\x69\x73\x86\x50\xd5\x3d\xe9\xa7\x35\xe7\x07\xd3\x35\x37\xf8\xfe\x9b\xe1\xd3\xdb\xc1\xd7\x7f\xdc\x3d\xb9\x19\xbc\xfa\xe1\xdf\x67\xaf\x66\x68\xee\x38\xd9\xac\x96\xec\xd5\x32\x5b\x6d\x81\xfc\x8a\x23\x7f\x28\x25\x9e\x4b\x67\x42\x6f\x91\x14\x8b\x66\x52\x4a\x44\x15\xe4\x85\xb8\x52\xf8\x17\x01\x68\x2c\x83\xfe\x3e\xed\x8e\x36\x58\x42\xbf\x81\xc3\xb1\xb4\x6c\x7f\x7b\x39\xfc\xe5\xaf\x48\xbc\x3b\x77\xaf\x6f\x06\x3f\xbd\x88\x86\xde\xfc\xfd\x6c\xf8\xe2\xe7\x32\x1a\x3e\x66\x08\x8a\x33\xb7\x16\xee\xbb\x4d\x1a\xce\x44\xfe\xff\xd3\x70\x0e\xfe\x26\x69\xd8\x8b\x43\x9b\xaf\xe2\x47\x32\xbe\xfb\xf3\xab\xe1\xf3\x1f\x67\x57\xfc\x09\x0e\xb6\x41\xb7\x45\x71\x3f\x94\x6a\x93\x03\xb1\xb6\xec\x2d\x50\x42\x8b\x3b\xa3\x3c\x29\xf5\x8a\xde\x94\x5b\x29\xaf\xb7\xa6\xad\xcd\xcb\x88\x6f\x23\x19\x8e\x3a\xab\x54\x78\xe3\x3e\x28\x8c\xb3\x2e\x3d\x4f\x8a\xd1\xb1\xa4\x72\x63\x72\x93\xe4\xf9\x63\xb0\xc7\x45\xd8\x74\x5e\x3e\x28\xe4\x39\xb1\x51\x5b\x3a\x90\x97\xdf\x0c\x82\x9a\x80\x75\x63\x51\x78\xdc\x9e\xee\xe6\x5d\xe5\x2e\x76\x25\x4f\x5b\x36\xff\xdf\x9f\xdc\x96\x42\x6a\x38\x9b\x03\x6b\x8e\xe4\x42\xc8\xb9\x66\x74\x6e\x7d\x85\xcd\x66\x49\x56\x26\xba\xbd\x2d\x27\x63\xd4\x6c\x97\xc1\x3f\xfb\xbd\xbd\x04\x13\xe9\x7a\x36\x5b\xbc\xe9\x04\x33\xbd\x26\xa5\x09\x31\x6d\xe3\x3a\xfc\x72\x6d\x8d\x7a\xd3\x69\xce\xcf\xa5\x74\x81\x89\x69\xde\x93\xe9\x65\xb8\xdf\x24\x19\x96\x88\xbe\xf0\x95\xbb\xa1\xca\x09\x5b\x37\x2b\x58\x83\x67\x43\x39\x08\x5c\x41\xa2\xbe\xa7\x7b\xda\x08\x59\xa4\x2f\x23\xce\xb8\x2d\x5c\x20\x74\x41\xcd\xe0\xf3\xfd\xfd\xd5\xf0\x99\x32\x15\x70\x85\xd6\xfa\x4e\x9a\x6b\x4b\x5e\x86\xdf\x0e\x3f\x58\x82\xc8\x94\xb5\x25\x04\xb0\x0e\x3a\xd6\x79\x5d\x15\x74\xb9\x46\x50\x16\x73\x9c\xa9\x84\xcf\x92\x42\x0f\x98\x8b\x3d\xcb\x66\xca\xb1\xc4\x44\x11\x2d\xe3\x81\x3b\x20\x90\x63\x7f\xf5\x0a\x5f\xd3\xc5\x41\x76\x35\x37\xde\x39\x24\xb8\x82\x04\xbf\xe2\xc7\x5d\x51\x97\x68\xc5\x31\x95\xdd\xe3\x24\x31\x6c\x1b\xbb\x05\x89\xd9\xd0\x04\xbd\xf2\x0b\x3a\x9d\x94\x2c\x8d\x05\x44\xe4\x36\xa2\x20\x02\x2f\xd3\xd0\xd1\x7a\xb3\x51\x6b\x37\xd2\xed\xfc\xe9\xa7\x87\xb9\x91\xc3\xc6\x27\x8d\xec\x48\xed\xf4\xf0\xa8\x9d\x84\x38\xea\x18\x4d\xa7\xc7\x02\x37\x04\x11\xfb\x9d\x8c\x39\x69\xbd\x16\x8a\xb6\x75\x5a\xaf\x37\x5a\xad\x74\x28\x8d\x66\xf3\xa4\x99\x89\xbf\xd5\x68\x5a\x8f\x4e\xda\x56\xe3\xb3\xa3\x56\x7b\x62\x66\x62\xf4\xb8\xd1\xac\x7f\x5c\x7b\xd4\x2e\xb6\x19\xcd\x46\x33\xb3\x20\x27\xc1\x4d\x62\x1e\xb5\x08\x1b\x56\x4b\x98\x6d\xcb\x40\xe0\xfd\x4a\x2d\xb4\x36\xd0\xac\xf8\x3b\x8f\xb9\x8d\x35\x5c\xad\xe3\x11\x13\x08\x54\x7d\xab\xe8\xdb\x80\x32\x41\xf9\x3d\x29\x16\x32\x04\x8f\x71\x77\x21\x1a\xd6\x53\x94\xb8\xb3\x54\x0d\x16\x97\x1c\xa7\xbf\xb8\x16\x7f\xc9\x45\x7e\x17\x3e\x1e\x5b\x0a\x64\x36\x2e\xfc\x3a\x61\xdd\x75\x3c\x9c\x15\x30\x04\x0b\xf9\x62\xf7\x20\xf0\x9d\xb9\xcd\xb3\x05\xa1\x62\x7e\xaf\x2b\xff\x05\x00\x00\xff\xff\x60\x10\x61\xa2\x4a\x21\x00\x00")

func proto_micro_mall_users_proto_users_users_swagger_json() ([]byte, error) {
	return bindata_read(
		_proto_micro_mall_users_proto_users_users_swagger_json,
		"proto/micro_mall_users_proto/users/users.swagger.json",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"proto/micro_mall_sku_proto/sku_business/sku.swagger.json": proto_micro_mall_sku_proto_sku_business_sku_swagger_json,
	"proto/micro_mall_users_proto/users/users.swagger.json":    proto_micro_mall_users_proto_users_users_swagger_json,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func     func() ([]byte, error)
	Children map[string]*_bintree_t
}

var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"proto": &_bintree_t{nil, map[string]*_bintree_t{
		"micro_mall_sku_proto": &_bintree_t{nil, map[string]*_bintree_t{
			"sku_business": &_bintree_t{nil, map[string]*_bintree_t{
				"sku.swagger.json": &_bintree_t{proto_micro_mall_sku_proto_sku_business_sku_swagger_json, map[string]*_bintree_t{}},
			}},
		}},
		"micro_mall_users_proto": &_bintree_t{nil, map[string]*_bintree_t{
			"users": &_bintree_t{nil, map[string]*_bintree_t{
				"users.swagger.json": &_bintree_t{proto_micro_mall_users_proto_users_users_swagger_json, map[string]*_bintree_t{}},
			}},
		}},
	}},
}}

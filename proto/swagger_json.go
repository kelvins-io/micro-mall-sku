package proto

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _proto_micro_mall_sku_proto_sku_business_sku_swagger_json = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\x5b\x8f\xdb\xc6\x15\x7e\xdf\x5f\x41\xb0\x7d\x68\x81\xc0\x72\xdd\xa2\x0f\x7e\x53\x25\x3a\x16\xb2\x5e\x09\x24\xe5\xd4\x28\x0c\x82\x22\x47\xda\x89\xc8\x19\x7a\x2e\xeb\xaa\xc5\x02\x31\x8a\xb4\x71\x10\x37\x01\x5c\xc7\xbd\x18\x41\x9d\xc6\xa8\x1f\x6a\x37\x05\x8a\xd8\x75\x0b\xf4\xcf\xac\xb4\xeb\x7f\x11\x90\xa2\x56\x24\xc5\x11\x6f\x7b\xa1\x80\x25\x60\x60\x35\x9c\x39\x73\x6e\xdf\x9c\x33\x33\xc7\xfc\xf5\x96\x24\xc9\xf4\xae\x39\x1a\x01\x22\x5f\x95\xe4\x2b\x97\x2e\xcb\xef\xf8\x6d\x10\x0d\xb1\x7c\x55\xf2\xdf\x4b\x92\xcc\x20\x73\x80\xff\xde\x23\x98\xe1\x86\x0b\x2d\x82\x0d\xd7\x74\x1c\x83\x8e\xb9\x31\x6f\xf4\xff\x1a\x70\x0a\x11\xa0\xd4\xff\x71\x29\x68\x0e\xa8\x49\x92\xbc\x07\x08\x85\x18\xf9\x34\xc2\x3f\x25\x84\x99\x44\x01\x93\xb7\x24\x69\x3f\x98\xd3\xc2\x88\x72\x17\x50\xf9\xaa\xf4\x8b\xf9\x28\xd3\xf3\x1c\x68\x99\x0c\x62\xd4\xf8\x80\x62\xe4\xf7\xbd\x1d\xf4\xf5\x08\xb6\xb9\x95\xb3\xaf\xc9\x76\xe9\x52\x98\xc6\xde\x8f\x7c\xfe\x1a\x10\xed\x01\xc4\x30\x99\x34\x2c\x8c\x86\x90\xb8\xc7\x5d\xfc\x31\x98\xb2\xc8\x6f\x5f\x4b\xdc\x75\x4d\x32\xf1\x25\x38\x7c\xfa\xf2\xe8\xe5\xd7\xd3\x37\x0f\xa7\x2f\xfe\x18\x0a\x18\x74\xc1\x1e\x20\x01\x03\x1d\xdb\xef\xa6\x8d\xf9\xcf\x42\x85\x68\x80\xec\x41\x0b\x18\xad\xf9\x4c\xda\x98\x77\x16\xb3\x47\x09\x10\x40\x3d\x8c\x28\xa0\xb1\xa9\x25\x49\xbe\x72\xf9\x72\xa2\x49\x92\x64\x1b\x50\x8b\x40\x8f\x85\x7a\x6d\x4a\x94\x5b\x16\xa0\x74\xc8\x1d\x69\x41\xe9\x52\x84\xfc\x5c\x0c\x6b\x17\xb8\xe6\x0a\x31\x49\x92\xbf\x4f\xc0\xd0\xa7\xf3\xbd\x86\x0d\x86\x10\x41\x9f\x2e\x8d\x99\x35\x85\x7b\x35\x9c\x47\x8e\x51\xdb\x8f\xfc\xda\x8f\x32\x20\xdb\x60\x68\x72\x87\x65\x0b\x83\x24\x8e\xc0\x2f\x3d\x60\x31\x60\x4b\x80\x10\x4c\x8e\x65\xaa\x2a\x12\xe1\x88\x41\x17\x28\x3e\xd1\x35\x7c\x6f\xa5\x48\x20\x7b\x26\x31\x5d\xc0\x00\x59\x7a\xde\xfc\x49\x88\x83\x4c\x37\x00\xcc\x00\xdb\x93\x24\xbf\x10\x89\xde\x10\x70\x87\x43\x02\x7c\xef\x61\x84\x83\xd3\x36\xdd\x1d\x0e\x28\xcb\xa3\x81\xdb\x11\x0d\x30\x73\x94\x94\x3d\xc5\xd3\x97\x54\x6f\x6f\x45\xa9\x85\xba\x4c\x01\xa1\x0d\x6c\x6e\xb1\x18\x06\xb9\x18\x82\xb3\xfb\x7f\x9b\xfe\xee\xb3\x32\x10\x6c\x07\xf3\x6c\x22\xfc\x12\x9c\x5f\x40\x2f\x7c\x6a\x0e\xbd\x15\xb3\xd5\x0a\x76\x0e\x8c\x05\x3a\x79\x04\xc4\xa0\x3b\xfa\xfd\xab\xe9\x67\x5f\x4c\xdf\x3c\x7e\xfb\xf0\x0d\x1d\xf3\xe9\xc7\x8f\x8f\x9e\x3e\x2f\x86\xbe\x77\x01\xd3\xc6\x7c\xdb\x9f\x74\x73\x80\xb7\x64\xfa\x02\x73\xe1\x23\xc0\x1c\xdd\xc5\x9e\x01\xed\x74\xd8\xdd\xe1\x80\xac\xc3\xdd\xd0\x74\x68\x12\x78\x6c\xe2\xcd\x09\x33\x02\xd1\x28\x39\x78\x88\x89\x6b\xfa\xda\x95\x21\x62\x3f\xfd\x89\x7c\x6e\x28\xf2\x38\x33\xcc\xbb\xe6\x24\x77\x0a\x79\xf0\xfa\x93\xd9\x97\xdf\x4e\x1f\xfd\x76\xfa\xf0\x5e\x31\x04\xf5\x38\x6b\xde\x35\x27\xda\x98\x6f\x10\x82\x96\x4c\x5f\x20\x28\x7c\x6a\x1e\xb5\xa2\x16\xab\x55\xc0\x22\x80\x32\x4c\x40\xee\x44\xf1\xde\x57\xd3\xaf\x1f\x94\x49\x14\xd5\xf9\x44\x9b\x98\x29\x26\x59\xbf\x00\x5d\xf8\xd4\x1c\x74\xab\x76\xab\x15\xf4\x28\x30\x89\xb5\x9b\x3b\xc6\xcd\xa3\xdb\xec\xf3\x27\x87\xff\xfe\xaa\x18\xf4\xb4\x60\xa2\x0d\x3d\x25\x59\x65\xfe\x02\x7e\xe1\x53\x73\xf8\xa5\x59\xae\x86\x00\x6c\xd0\x09\xb2\x0a\xa2\x70\x1e\x00\xe7\x58\x9c\x7e\xfe\xe9\xec\xc5\xb3\xd9\xa3\x6f\x66\x0f\x5e\xfe\xe0\xe8\x9f\xaf\xa6\x4f\x9e\x1f\xbc\xfe\xf3\xf4\x93\xa7\x07\xaf\x1f\x1c\xfe\xe7\xde\xf4\xff\x7f\x9a\x3d\xfe\xf6\xe8\x9b\xdf\x1c\xfe\xe1\xf9\x0f\x4b\xe1\x76\x82\xac\xcd\xc6\x6e\x42\x80\x0b\xfc\x86\xcf\x66\xe0\x77\xc5\x7a\x35\xc0\xb0\x47\xa0\x05\x1a\x43\xe8\x30\x62\x32\x90\x1b\xbc\xb3\x4f\xef\x1f\xbe\xf8\xe2\xf0\xd1\xb3\xc3\x17\x7f\x79\xfb\xe1\xfd\x39\x96\x0f\xfe\xfb\x6a\xf6\xd7\xff\x1d\xde\xff\x78\xf6\xe4\x1f\xc5\xf0\x79\x2d\x9c\x5f\x1b\xf3\x9e\xcf\xd0\xcd\xf0\x56\x66\x73\x00\x2a\x90\xe0\x02\xa1\xe1\x53\x73\x84\x0a\xcd\x57\x0b\x88\xfa\x00\x62\x93\x06\xe5\x9e\xe7\x00\x17\xa0\xdc\xb7\x11\x47\x4f\x9f\x4d\x3f\xfa\x88\x8e\x79\x18\x6c\xff\xf5\xe5\xec\xc3\xbf\x17\x0c\x9d\xc7\x93\x06\xba\x99\xb3\xb2\x41\xc0\x4c\xe5\xff\x02\x96\xe1\x53\x73\x58\x0a\x8c\x77\x1e\xa0\x3c\xae\x06\x88\xf0\xba\xbc\xbb\x0f\x6a\x0a\x06\x7c\xd8\x44\xb1\xa3\xd6\xc5\x29\x31\x1e\x7c\x00\xac\xe5\xcd\x82\x1c\x42\x1a\x26\x40\x13\xf4\x37\x38\x71\x92\x50\x4a\x9c\x36\xa7\xda\x78\xcf\x74\x38\xc8\x18\x18\x73\xea\xe5\x21\xf5\x60\xc2\x22\x82\xef\xa7\xae\x46\x31\xf7\xab\x20\x22\x48\x10\xc8\x2d\x9f\x85\x6d\xa1\x78\x10\x31\x30\x02\x44\x24\x1f\x44\xec\xc7\x57\xd2\xa9\xba\x80\x52\x73\x94\xa5\xb7\xd4\xa1\x36\x60\x26\x74\x56\x96\xbd\xc5\x50\x93\x10\x33\x0e\x15\x19\x32\xe0\x26\xfb\x0b\x71\x10\x75\xa9\x74\x80\xa7\xda\x29\x7e\xb9\xee\xba\x91\x1c\xa4\x82\xd5\xd2\x94\x9f\xe7\xd8\x88\xb5\xfc\x81\xe9\x9a\xa7\xa3\xdc\x5a\xcf\x21\xa9\xb0\x8c\xa0\x82\xd4\x98\x33\x83\x11\xd3\x06\x06\xc2\xd5\xcd\x2c\x92\x4e\xb4\x68\x63\xcf\x70\x01\x4b\xae\x9c\x39\xd4\xde\x5d\x04\xf5\x1b\xfe\xf0\xaa\x5a\x3c\x09\xe7\xf1\xdd\xb0\xb8\x1c\x09\xf7\x2d\x20\x88\xe0\x6a\xbb\x82\x0c\x89\xeb\xe8\x92\x2e\x90\x2d\xf3\x31\xcf\x0a\x62\x64\xa2\xed\x62\x2f\x8f\xa3\x84\xf6\x3e\x6b\x7f\x11\x15\x7e\xd4\xc9\x57\x22\x7a\x82\xd4\x08\xb3\x4d\x91\x25\x07\x18\x3b\xc0\x44\xc2\x38\x19\xbe\x2e\xa0\xa2\x8c\x8d\x45\x05\x4d\x51\xc0\x8c\xb3\xf2\xca\x04\xf7\x1a\x60\xd9\x5e\xe9\x61\x07\x5a\x13\x23\x64\xa7\xa0\x39\x17\x13\xf6\x02\x22\x0b\x25\xea\x3e\xad\xd4\xc9\x1c\xe8\x42\x66\x70\xcf\x03\xc2\xdc\x22\x3b\x47\x88\x5e\xd4\x57\xb0\x6c\xbd\x41\x40\x00\x5d\xdd\xc9\x9c\x8a\xd3\x88\x15\xe4\x33\x50\x32\xa5\x59\x4f\xb4\x0a\x9c\xc2\x0a\x91\x52\x09\x74\xd2\x79\x22\xfa\xf6\x99\x5f\x97\xba\x9e\x70\xfe\x90\xa9\xc0\x94\x9a\xa1\x0d\x08\x8b\xd1\x94\xa4\x83\x86\xb8\xac\xf4\xf1\xf0\xda\x0e\x32\xf8\x4a\x5e\x93\x61\xdd\x75\xfb\x07\xd3\xc5\x1c\x09\xb5\x57\xcc\xe1\x0a\x0a\x1e\xe4\x15\x35\x04\x4b\x9e\x84\x3b\x7b\x4b\x76\xf6\x79\x5a\xe8\x48\x25\x9d\x32\x9e\x7f\x55\xd9\xaf\x78\x06\x3f\x0d\xab\x78\x06\xf4\x4e\x6e\xaf\x76\x2c\xae\x1e\x4f\x0d\x44\x8c\xca\x00\x71\x37\x76\x72\x23\xb7\x54\xa5\xa9\x2b\xd1\x53\xc8\x7e\xaf\x9d\x68\x69\x2b\xdb\x4a\xbc\xa5\xd9\x6f\x77\xf4\x68\x43\xaf\xaf\x1b\xcd\xf7\x9b\xb7\x16\xdc\x1f\x1f\x17\x45\x0e\xfc\x16\x73\x09\xc5\x59\x2d\x48\xaa\xb6\x9e\x94\x4a\x96\x04\x8b\x63\xfa\x2e\xa1\x5c\x4a\x16\x37\x5b\xc6\x14\x67\xbc\x11\x49\x29\xe3\xab\x53\xfa\x95\xc9\xbf\xa8\xbe\x66\x03\x22\xf3\x46\x6d\x58\x85\xf5\x67\x75\xf2\x96\x73\xde\xb1\x2e\x0e\xed\x4a\x2d\xcc\x5a\xbf\xd5\x52\x34\x2d\xba\xc8\x2a\xaa\xda\x55\x63\x4b\xb5\xa6\xa8\xc6\x4e\x57\x37\x94\x9f\x77\x34\x7d\xe5\xcd\x4a\xeb\x0d\x45\x6d\x5d\x6f\xee\xe8\xe9\x63\x8e\xdf\xae\xbc\xd1\xae\x77\x7b\xe9\x63\x82\x37\xab\xad\xef\xf5\x05\xdd\xdf\xeb\xa7\x37\x36\x6f\x74\xfb\x0b\xbe\x76\xba\xfd\x77\xaf\x47\x3b\xe8\x6a\x73\x47\x6b\xb6\xf4\x4e\x77\xc7\xb8\xd6\xec\x6c\x2b\xed\xe4\xf0\x9e\xda\x69\x29\xc6\x4d\x45\xd5\xfc\x3e\xc2\xa9\xe3\xdd\x7a\xdd\xed\x4e\xeb\x96\xa1\xdf\xea\x29\xc1\x10\xad\xdf\xeb\x75\xd5\x7c\x83\xda\x4d\xbd\x69\x5c\xeb\xaa\x37\x9a\xba\xa1\xa8\x6a\x72\x4c\x5b\x69\xf7\x5b\xba\xd1\xd9\xb9\xa9\xec\xe8\x5d\xf5\x96\xa1\x2a\xad\xae\xda\x4e\xe7\x4a\xd4\x59\x28\x86\xaa\x68\x7a\x57\x55\x72\x92\x17\xf6\x5e\xd2\x5f\x17\xb4\x17\x7e\x28\xf4\xf2\xd5\x92\xaa\x60\xfd\xaa\xb2\x10\xc4\xfe\x6b\x6a\xd8\x76\x52\xc1\x9b\x5a\xf1\xd2\xe2\x18\x83\x88\xbb\x03\xf1\xc1\x86\x8d\xf9\xc0\x29\x14\x8d\xc4\xe5\x66\x15\xb4\x33\x06\x93\xbb\x98\x64\x25\xa7\x15\xb9\xac\xf7\x6a\x7e\x66\x9b\x65\x81\x6f\xa7\xc7\xe5\xbc\x8a\x16\x54\x2f\xd5\x70\x17\xe9\x99\x23\x60\x50\xf8\xab\x92\xb7\xa1\x59\x94\xe7\x41\xef\x2c\x36\xed\x19\x55\x7f\x35\x75\xf3\xb4\x75\xb0\xce\x67\x42\x2b\x74\xce\xe9\x3c\x28\x2c\xbe\x28\x3c\x2e\x28\xe1\x2b\x33\x70\xf1\xf5\x84\xc2\x03\x29\x1f\x18\xa5\x07\xdb\x80\x5a\xe5\xc4\xc4\x36\xb7\xc2\x4a\x9b\x12\x2c\x7b\x9e\x03\xc5\xb7\x03\x6b\x2b\x0f\x4c\x06\x46\x38\x96\x1c\xc4\xc6\x96\xaf\x3e\xb0\xb0\x53\xb6\x18\xc2\xc1\x64\xad\xa7\x95\x67\x8a\x7a\xc0\x82\xc3\xf0\x93\x15\x65\x2d\x6c\x38\x10\x8d\x4b\x19\x8a\xc5\xeb\x50\x4f\x48\xa8\xe5\x77\x3e\x4e\x36\x22\x9c\xe4\x21\xee\x3b\xa7\x14\x1a\xb7\x12\xf4\x97\x9f\x4d\x89\xd5\xe0\x07\x75\xf7\x6b\x32\x66\xf1\x95\x5c\xa9\xad\xe2\x62\x6f\xa2\x29\xc1\x1e\x29\xba\x01\x58\xbc\xea\xf7\x7a\x8a\x9a\xf6\x62\xbb\xfb\xbe\xa2\xae\xdd\x00\x24\xa9\x67\x8a\x15\x5e\x24\x55\xde\x05\x54\x89\x00\xa5\x57\xf2\x13\xf5\xee\x3c\x01\x33\x79\x1b\x5c\xc3\x2c\x10\xf8\x96\x3c\xaf\x1b\xf2\x6a\x09\xf7\xba\xaa\xc7\x1a\x6a\xba\x8a\xcb\xe7\x48\xd3\x05\x0b\xa4\xb9\x7a\x88\x5d\x2c\x8d\x30\x2c\x7f\xe9\x16\x87\xf5\x9c\x54\xec\x35\xf1\x6a\xbd\x04\xc0\x19\x1a\x0e\x1c\x9e\x69\xb2\x58\xf5\x86\xed\xb4\x8e\x6e\xcf\xe0\xa2\xa2\x2c\xee\x6a\xb8\xdb\x8a\x8b\xb2\xe5\xff\xdb\xdf\xfa\x2e\x00\x00\xff\xff\x48\x17\xc3\xfe\x34\x4d\x00\x00")

func proto_micro_mall_sku_proto_sku_business_sku_swagger_json() ([]byte, error) {
	return bindata_read(
		_proto_micro_mall_sku_proto_sku_business_sku_swagger_json,
		"proto/micro_mall_sku_proto/sku_business/sku.swagger.json",
	)
}

var _proto_micro_mall_users_proto_users_users_swagger_json = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x58\x4f\x6f\x23\x35\x14\xbf\xe7\x53\x58\x86\x63\xd5\x94\x82\x38\xf4\x16\xa5\x11\x54\xa2\x5b\x94\xa4\x12\x12\xaa\x46\xee\xcc\x4b\xe2\xd5\x8c\x3d\xb5\xdf\x94\x46\xa8\x87\x95\x00\xed\x09\x0e\x5b\x16\x21\xd0\x8a\xbd\x71\x82\x03\x42\x45\xcb\x61\xbf\x0c\xc9\x96\x6f\x81\x3c\x7f\x92\x99\xc9\x24\x9d\xfc\xeb\x26\xa2\x52\xab\xd4\xf6\x7b\x7e\xbf\x9f\x7f\x7e\xcf\x2f\x5f\x56\x08\xa1\xfa\x0b\xd6\xed\x82\xa2\x07\x84\xee\xef\xee\xd1\x1d\x33\xc6\x45\x47\xd2\x03\x62\xe6\x09\xa1\xc8\xd1\x05\x33\xef\x2b\x89\xb2\xea\x71\x5b\x49\xcb\x63\xae\x6b\x05\x1a\x94\xb6\xa2\xe1\xf0\x73\xf4\x77\x37\x1c\x09\x5d\x11\x42\x2f\x41\x69\x2e\x85\x71\x10\x7f\x24\x42\x22\xd1\x80\xb4\x42\xc8\x75\xb8\xa1\x2d\x85\x0e\x3c\xd0\xf4\x80\x7c\x1e\x59\x31\xdf\x77\xb9\xcd\x90\x4b\x51\x7d\xac\xa5\x30\x6b\xcf\xc2\xb5\xbe\x92\x4e\x60\x97\x5c\xcb\xb0\xa7\xc7\x48\xaa\x97\xef\x85\x11\x56\x33\x00\x09\xa1\x5d\xc0\xd4\xbf\x86\x95\xc0\xf3\x98\xea\x9b\xa0\xef\xbe\xbd\x1d\x7c\xf7\xfc\xcd\xcd\xaf\xc3\xa7\xb7\xff\xbc\x7e\x39\x7c\xf2\x7b\x8c\x2c\x5c\x28\x7d\x50\xe1\xce\x47\x8e\x59\xfc\x11\xe0\xa9\x06\x75\x64\xfc\xa7\x56\x29\xd0\xbe\x14\x1a\x74\x66\x17\x42\xe8\xfe\xde\x5e\x6e\x88\x10\xea\x80\xb6\x15\xf7\x31\x66\xad\x46\x74\x60\xdb\xa0\x75\x27\x70\x49\xe2\x69\x37\xe5\x3e\x8a\xd8\xee\x81\xc7\x26\x9c\x11\x42\xdf\x55\xd0\x31\x7e\xde\xa9\x3a\xd0\xe1\x82\x1b\xbf\xf1\x49\xa5\xc2\x6d\xc6\x8e\x69\xc6\xfc\xba\x52\xf4\xf9\x3a\x05\xcd\x67\x8a\x79\x80\xa0\xc6\x07\x12\xfd\xe4\x40\x09\xe6\x85\x22\x0a\xb8\x93\x0f\x9d\x87\x30\x2f\x02\x50\xfd\xfc\x94\x82\x8b\x80\x2b\x30\xdc\x76\x98\xab\x21\x37\x8d\x7d\x3f\x74\xaa\x51\x71\xd1\xcd\x1b\x77\xa4\xf2\x98\x39\x58\xca\x05\x7e\xf8\x01\x2d\xc4\x72\x96\xc2\x82\xac\x9b\x47\x41\x0d\x3f\xba\x05\xea\x92\xdb\x29\x6e\xce\x2a\x69\x3f\x31\x1f\x63\x7d\x79\xa0\xec\x1e\x13\xa8\xab\x4c\x6b\x69\x73\x86\x50\xd5\x3d\xe9\xa7\x35\xe7\x07\xd3\x35\x37\xf8\xfe\x9b\xe1\xd3\xdb\xc1\xd7\x7f\xdc\x3d\xb9\x19\xbc\xfa\xe1\xdf\x67\xaf\x66\x68\xee\x38\xd9\xac\x96\xec\xd5\x32\x5b\x6d\x81\xfc\x8a\x23\x7f\x28\x25\x9e\x4b\x67\x42\x6f\x91\x14\x8b\x66\x52\x4a\x44\x15\xe4\x85\xb8\x52\xf8\x17\x01\x68\x2c\x83\xfe\x3e\xed\x8e\x36\x58\x42\xbf\x81\xc3\xb1\xb4\x6c\x7f\x7b\x39\xfc\xe5\xaf\x48\xbc\x3b\x77\xaf\x6f\x06\x3f\xbd\x88\x86\xde\xfc\xfd\x6c\xf8\xe2\xe7\x32\x1a\x3e\x66\x08\x8a\x33\xb7\x16\xee\xbb\x4d\x1a\xce\x44\xfe\xff\xd3\x70\x0e\xfe\x26\x69\xd8\x8b\x43\x9b\xaf\xe2\x47\x32\xbe\xfb\xf3\xab\xe1\xf3\x1f\x67\x57\xfc\x09\x0e\xb6\x41\xb7\x45\x71\x3f\x94\x6a\x93\x03\xb1\xb6\xec\x2d\x50\x42\x8b\x3b\xa3\x3c\x29\xf5\x8a\xde\x94\x5b\x29\xaf\xb7\xa6\xad\xcd\xcb\x88\x6f\x23\x19\x8e\x3a\xab\x54\x78\xe3\x3e\x28\x8c\xb3\x2e\x3d\x4f\x8a\xd1\xb1\xa4\x72\x63\x72\x93\xe4\xf9\x63\xb0\xc7\x45\xd8\x74\x5e\x3e\x28\xe4\x39\xb1\x51\x5b\x3a\x90\x97\xdf\x0c\x82\x9a\x80\x75\x63\x51\x78\xdc\x9e\xee\xe6\x5d\xe5\x2e\x76\x25\x4f\x5b\x36\xff\xdf\x9f\xdc\x96\x42\x6a\x38\x9b\x03\x6b\x8e\xe4\x42\xc8\xb9\x66\x74\x6e\x7d\x85\xcd\x66\x49\x56\x26\xba\xbd\x2d\x27\x63\xd4\x6c\x97\xc1\x3f\xfb\xbd\xbd\x04\x13\xe9\x7a\x36\x5b\xbc\xe9\x04\x33\xbd\x26\xa5\x09\x31\x6d\xe3\x3a\xfc\x72\x6d\x8d\x7a\xd3\x69\xce\xcf\xa5\x74\x81\x89\x69\xde\x93\xe9\x65\xb8\xdf\x24\x19\x96\x88\xbe\xf0\x95\xbb\xa1\xca\x09\x5b\x37\x2b\x58\x83\x67\x43\x39\x08\x5c\x41\xa2\xbe\xa7\x7b\xda\x08\x59\xa4\x2f\x23\xce\xb8\x2d\x5c\x20\x74\x41\xcd\xe0\xf3\xfd\xfd\xd5\xf0\x99\x32\x15\x70\x85\xd6\xfa\x4e\x9a\x6b\x4b\x5e\x86\xdf\x0e\x3f\x58\x82\xc8\x94\xb5\x25\x04\xb0\x0e\x3a\xd6\x79\x5d\x15\x74\xb9\x46\x50\x16\x73\x9c\xa9\x84\xcf\x92\x42\x0f\x98\x8b\x3d\xcb\x66\xca\xb1\xc4\x44\x11\x2d\xe3\x81\x3b\x20\x90\x63\x7f\xf5\x0a\x5f\xd3\xc5\x41\x76\x35\x37\xde\x39\x24\xb8\x82\x04\xbf\xe2\xc7\x5d\x51\x97\x68\xc5\x31\x95\xdd\xe3\x24\x31\x6c\x1b\xbb\x05\x89\xd9\xd0\x04\xbd\xf2\x0b\x3a\x9d\x94\x2c\x8d\x05\x44\xe4\x36\xa2\x20\x02\x2f\xd3\xd0\xd1\x7a\xb3\x51\x6b\x37\xd2\xed\xfc\xe9\xa7\x87\xb9\x91\xc3\xc6\x27\x8d\xec\x48\xed\xf4\xf0\xa8\x9d\x84\x38\xea\x18\x4d\xa7\xc7\x02\x37\x04\x11\xfb\x9d\x8c\x39\x69\xbd\x16\x8a\xb6\x75\x5a\xaf\x37\x5a\xad\x74\x28\x8d\x66\xf3\xa4\x99\x89\xbf\xd5\x68\x5a\x8f\x4e\xda\x56\xe3\xb3\xa3\x56\x7b\x62\x66\x62\xf4\xb8\xd1\xac\x7f\x5c\x7b\xd4\x2e\xb6\x19\xcd\x46\x33\xb3\x20\x27\xc1\x4d\x62\x1e\xb5\x08\x1b\x56\x4b\x98\x6d\xcb\x40\xe0\xfd\x4a\x2d\xb4\x36\xd0\xac\xf8\x3b\x8f\xb9\x8d\x35\x5c\xad\xe3\x11\x13\x08\x54\x7d\xab\xe8\xdb\x80\x32\x41\xf9\x3d\x29\x16\x32\x04\x8f\x71\x77\x21\x1a\xd6\x53\x94\xb8\xb3\x54\x0d\x16\x97\x1c\xa7\xbf\xb8\x16\x7f\xc9\x45\x7e\x17\x3e\x1e\x5b\x0a\x64\x36\x2e\xfc\x3a\x61\xdd\x75\x3c\x9c\x15\x30\x04\x0b\xf9\x62\xf7\x20\xf0\x9d\xb9\xcd\xb3\x05\xa1\x62\x7e\xaf\x2b\xff\x05\x00\x00\xff\xff\x60\x10\x61\xa2\x4a\x21\x00\x00")

func proto_micro_mall_users_proto_users_users_swagger_json() ([]byte, error) {
	return bindata_read(
		_proto_micro_mall_users_proto_users_users_swagger_json,
		"proto/micro_mall_users_proto/users/users.swagger.json",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"proto/micro_mall_sku_proto/sku_business/sku.swagger.json": proto_micro_mall_sku_proto_sku_business_sku_swagger_json,
	"proto/micro_mall_users_proto/users/users.swagger.json":    proto_micro_mall_users_proto_users_users_swagger_json,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func     func() ([]byte, error)
	Children map[string]*_bintree_t
}

var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"proto": &_bintree_t{nil, map[string]*_bintree_t{
		"micro_mall_sku_proto": &_bintree_t{nil, map[string]*_bintree_t{
			"sku_business": &_bintree_t{nil, map[string]*_bintree_t{
				"sku.swagger.json": &_bintree_t{proto_micro_mall_sku_proto_sku_business_sku_swagger_json, map[string]*_bintree_t{}},
			}},
		}},
		"micro_mall_users_proto": &_bintree_t{nil, map[string]*_bintree_t{
			"users": &_bintree_t{nil, map[string]*_bintree_t{
				"users.swagger.json": &_bintree_t{proto_micro_mall_users_proto_users_users_swagger_json, map[string]*_bintree_t{}},
			}},
		}},
	}},
}}
